/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};
APP.AM = function() {
  this.setupData();
  this.setupUI();
  this.listeners();
};

APP.AM.constructor = APP.AM;

APP.AM.prototype.setupData = function() {
  new APP.RestClientManager();
  new APP.TemplateManager();

  $('.' + path + '-menu').addClass('selected');

  DataApp.currentUser = user || null;
  if (DataApp.currentUser !== null)
    DataApp.currentUser.url = '/user/' + DataApp.currentUser.username;

  var flash, flashMessage;
  errorMessage.length > 0 && (flash = $('.error'), flashMessage = errorMessage[0]);
  successMessage.length > 0 && (flash = $('.succes'), flashMessage = successMessage[0]);

  if (flash) {
    flash.find('.content-text').text(flashMessage);
    flash.addClass('fadeIn');
  }
};

APP.AM.prototype.setupUI = function() {
  this.signInBtn = $('.am-Signin-button');
  this.closeFlashBtn = $('.close-flash');
  this.flashMessage = $('.flash-message');
  this.closeModalBtn = $('.closed-modal');

  this.generalSearch = $('.general-search');
  this.generalSearchBtn = $('.search-general-btn');
  this.generalSearchOptions = $('.general-search-options');

  this.subscriptionForm = $('.subscription-form');
  this.subscriptionBtn = $('.subscription-btn');

  this.body = $('.body');
  this.searchBox = $('.search-box');
  this.headerBars = $('.am-header-mobile .bars');
  this.headerAvatar = $('.am-header-mobile .avatar');
  this.headerCover = $('.body-inner .cover');

  this.worksOption = this.generalSearchOptions.find('.works-option');
  this.productsOption = this.generalSearchOptions.find('.products-option');
  this.usersOption = this.generalSearchOptions.find('.users-option');
  this.collectionsOption = this.generalSearchOptions.find('.collections-option');
  this.emailSubscription = this.subscriptionForm.find('input[name=email]');
};

APP.AM.prototype.listeners = function() {
  this.generalSearch.focus(this.searchFocusHandler.bind(this));
  this.generalSearch.blur(this.searchBlurHandler.bind(this));
  this.generalSearch.keyup(this.searchKeyUpHandler.bind(this));
  this.generalSearchBtn.click(this.generalSearchBtnClickHandler.bind(this));

  this.subscriptionForm.submit(this.subscriptionFormHandler.bind(this));
  this.subscriptionBtn.click(this.subscriptionHandler.bind(this));

  this.signInBtn.click(this.signInHandler);
  this.closeFlashBtn.click(this.closeFlashHandler.bind(this));

  this.headerBars.click(this.headerBarsHandler.bind(this));

  this.headerAvatar.click(this.headerAvatarHandler.bind(this));

  this.headerCover.click(this.headerCoverHandler.bind(this));
  this.closeModalBtn.click(this.closeModal.bind(this));
  this.searchBox.submit(this.searchBoxHandler.bind(this));
  $(document).keyup(this.escapeHandler.bind(this));
};

APP.AM.prototype.headerCoverHandler = function(event) {
  this.body.removeClass('open-right');
  this.body.removeClass('open-left');
};
APP.AM.prototype.headerAvatarHandler = function(event) {
  event.preventDefault();
  this.body.removeClass('open-left');
  this.body.toggleClass('open-right');
};
APP.AM.prototype.headerBarsHandler = function(event) {
  event.preventDefault();
  this.body.removeClass('open-right');
  this.body.toggleClass('open-left');
};
APP.AM.prototype.searchBoxHandler = function(event) {
  event.preventDefault();
  window.location.href = DataApp.discoverWorks + '?term=' + $('.search-box-value').val();
};

APP.AM.prototype.escapeHandler = function(event) {
  if (event.keyCode == 27)
    this.closeModal();
};

APP.AM.prototype.closeModal = function() {
  $('#lean_overlay').trigger("click");
};

APP.AM.prototype.signInHandler = function(event) {
  event.preventDefault();
  Utils.checkAuthentication();
};

APP.AM.prototype.closeFlashHandler = function(event) {
  event.preventDefault();
  this.flashMessage.css('visibility', 'hidden');
};

APP.AM.prototype.subscriptionHandler = function(event) {
  event.preventDefault();
  this.subscriptionForm.submit();
};

APP.AM.prototype.subscriptionFormHandler = function(event) {
  event.preventDefault();

  var errors = [],
    emailValue = this.emailSubscription.val();
  if (Validations.notBlank(emailValue)) errors.push('Ingrese un correo');
  if (!Validations.email(emailValue)) errors.push('Formato de correo no valido');
  if (errors.length > 0) return APP.BaseScreen.prototype.showFlash.call(this, 'error', errors);

  $.post('/subscribe', {
    email: emailValue
  }).then(this.subscriptionComplete.bind(this));
};

APP.AM.prototype.subscriptionComplete = function(response) {
  if (response.data.created)
    APP.BaseScreen.prototype.showFlash.call(this, 'succes', 'Suscripcion exitosa');
  else
    APP.BaseScreen.prototype.showFlash.call(this, 'error', ['Ya estas Suscrito']);
};

APP.AM.prototype.searchFocusHandler = function(event) {
  this.generalSearchOptions.show();
};

APP.AM.prototype.searchBlurHandler = function(event) {
  var scope = this;
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    scope.generalSearchOptions.hide();
  }, 200);
};

APP.AM.prototype.generalSearchBtnClickHandler = function(event) {
  var baseUrl = this.getBaseUrl();
  window.location.href = '/works/category' + baseUrl;
};

APP.AM.prototype.searchKeyUpHandler = function(event) {
  var currentValue = this.generalSearch.val();
  this.generalSearchOptions.show();

  this.worksOption.text(currentValue);
  this.usersOption.text(currentValue);
  this.collectionsOption.text(currentValue);
  this.productsOption.text(currentValue);

  var baseUrl = this.getBaseUrl();

  this.worksOption.parent().attr('href', '/works/category' + baseUrl);
  this.productsOption.parent().attr('href', '/products/category' + baseUrl);
  this.usersOption.parent().attr('href', '/users/specialty' + baseUrl);
  this.collectionsOption.parent().attr('href', '/collections/category' + baseUrl);
};

APP.AM.prototype.getBaseUrl = function() {
  var baseUrl = '/all/page-1';
  var value = this.generalSearch.val();
  if (value.length > 0)
    baseUrl += '?term=' + encodeURIComponent(value);
  return baseUrl;
};

/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};
APP.BaseElement = function(data, id, options) {
  this.options = options || {
    context: 'normal'
  };
  this.template = APP.TemplateManager.instance.getFromDoc(id);
  this.data = data;
  this.id = id;
  var viewHelpers = {
    addFilter: Utils.addImageFilter,
    formatDate: function(date) {
      return moment(date).fromNow();
    },
    viewer: DataApp.currentUser
  };
  _.extend(this.data, this.options);
  _.extend(this.data, viewHelpers);

  console.log(this.data);

  this.view = $(this.template(this.data));
  this.rawView = this.view[0];
  this.listeners();
};

APP.BaseElement.prototype = Object.create(EventDispatcher.prototype);

APP.BaseElement.constructor = APP.BaseElement;

APP.BaseElement.prototype.listeners = function() {
  this.featuredBtn = this.view.find('.featured');
  this.featuredBtn.click(this.featuredHandler.bind(this));
};

APP.BaseElement.prototype.featuredHandler = function() {
  var url, tempId = this.id;
  if (this.id === 'table-work') tempId = 'work';
  if (this.id === 'table-user') tempId = 'user';

  if (this.data.featured) {
    if (tempId === 'user') {
      url = '/user/' + this.data.username + '/unfeatured';
    } else {
      url = '/user/' + this.data.User.username + '/' + tempId + '/unfeatured';
    }
  } else {
    if (tempId === 'user') {
      url = '/user/' + this.data.username + '/featured';
    } else {
      url = '/user/' + this.data.User.username + '/' + tempId + '/featured';
    }
  }
  var scope = this,
    payload = {};
  payload['id' + Utils.capitalize(tempId)] = this.data.id;
  $.post(url, payload, function(response) {
    if (response.status === 200) {
      if (response.data[tempId].featured) {
        if (scope.id.indexOf('table') > -1)
          scope.featuredBtn.removeClass('btn-default').addClass('btn-primary');
        else
          scope.featuredBtn.removeClass('disabled');
      } else {
        if (scope.id.indexOf('table') > -1)
          scope.featuredBtn.removeClass('btn-primary').addClass('btn-default');
        else
          scope.featuredBtn.addClass('disabled');
      }
      scope.data.featured = response.data[tempId].featured;
    }
  });
};

APP.BaseElement.prototype.callToApi = function(params) {
  return APP.RestClientManager.instance.execute(params);
}

APP.BaseElement.prototype.isLogged = function() {
  Utils.checkAuthentication();
  return DataApp.currentUser !== null;
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.BaseScreen = function(id) {
  this.id = id;

  this.setupUI();
  this.listeners();
};

APP.BaseScreen.prototype = Object.create(Object.prototype);

APP.BaseScreen.constructor = APP.BaseScreen;
APP.BaseScreen.prototype.setupUI = function() {

};

APP.BaseScreen.prototype.listeners = function() {

};

APP.BaseScreen.prototype.requestHandler = function(url, payload, next, error, free) {
  !free && Utils.checkAuthentication();
  $.post(url, payload).then(this.requestComplete.bind(this, next, error));
};

APP.BaseScreen.prototype.requestComplete = function(next, error, response) {
  console.log('response ===>', response);
  if (response.status !== 200) {
    var errors = response.data.errors || ['Algo sucedió mal'];
    error && error.bind(this)();
    return this.showFlash('error', errors);
  }
  next.bind(this)(response);
};

APP.BaseScreen.prototype.showFlash = function(meta, data) {
  var element = $('.' + meta);
  $('.flash-message').css('visibility', 'hidden');
  var container = element.find('.content-text');
  container.empty();
  if (meta === 'error') {
    for (var i = 0; i < data.length; i++) {
      container.append($('<p>').text('✘ ' + data[i]));
    }
  } else {
    container.text(data);
  }
  element.css('visibility', 'visible');
  element.removeClass('fadeIn');
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    element.addClass('fadeIn');
  }, 100);
};

APP.BaseScreen.prototype.getTemplate = function(path) {
  var temp = '';
  if (['followings', 'followers'].indexOf(path) !== -1) temp = 'user';
  if ('portfolio' === path) temp = 'work';
  if ('products' === path) temp = 'product';
  if ('collections' === path) temp = 'collection';
  return temp;
};

APP.BaseScreen.prototype.clean = function() {

};
/**
 * @author www.juliocanares.com/cv
 * @email juliocanares@gmail.com
 */

var DataApp = {};
DataApp.currentUser = null;
DataApp.baseUrl = window.location.origin + '/';
DataApp.baseTitle = 'Arte Manifiesto | ';
DataApp.loginUrl = DataApp.baseUrl + 'auth/login';
DataApp.discoverWorks = DataApp.baseUrl + 'works/category/all/page-1/';
DataApp.discoverUsers = DataApp.baseUrl + 'users/specialties/all/page-1/';
DataApp.discoverProducts = DataApp.baseUrl + 'products/type/all/page-1/';
DataApp.searchCollections = DataApp.baseUrl + 'artjam/collections/page-1';

DataApp.currentUrl = window.location.href.replace(/\/$/g, '');
DataApp.currentUrl = DataApp.currentUrl.replace(/#_=_$/g, '');
DataApp.fbAppID = '1473636902857068';


var Events = {};
Events.LOAD_START = 'loadStart';
Events.LOAD_END = 'loadEnd';
Events.COLLECTION_ITEM_SELECTED = 'collectionItemSelected';
Events.ADD_COLLECTION = 'addCollection';
Events.SHARE = 'share';
Events.FILTER_CHANGED = 'filterChanged';
Events.CREATOR_READY = 'creatorReady';


var Validations = {
  notBlank: function(value) {
    if (!value) {
      return true
    };
    return '' === value.replace(/^\s+/g, '').replace(/\s+$/g, '')
  },
  username: function(value) {
    var re = new RegExp(/^[a-zA-Z0-9]+$/);
    return re.test(value);
  },
  email: function(value) {
    var re = new RegExp(/^\w+@\w+\.\w{2,3}$/);
    return re.test(value);
  }
}
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};
APP.Carrousel = function(view, container) {
  this.view = view;
  this.container = container;
  this.nextBtn = this.view.find('.nextButton');
  this.prevBtn = this.view.find('.prevButton');
  this.carrousel = this.view.find('.more-images');
  this.setup();
};

APP.Carrousel.constructor = APP.Carrousel;

APP.Carrousel.prototype.checkArrows = function() {
  clearTimeout(this.timeout);

  if (this.container[0].scrollWidth > this.container.innerWidth()) {
    this.nextBtn.show();
    this.prevBtn.show();
  } else {
    this.nextBtn.hide();
    this.prevBtn.hide();
  }

  this.animationComplete();
};

APP.Carrousel.prototype.setup = function() {
  this.nextBtn.click(this.nextHandler.bind(this));
  this.prevBtn.click(this.prevHandler.bind(this));

  this.carrousel.scroll(this.animationComplete.bind(this));

  $(window).resize(this.checkArrows.bind(this));

  this.timeout = setTimeout(this.checkArrows.bind(this), 1000);
};

APP.Carrousel.prototype.nextHandler = function() {
  this.carrousel.animate({
    scrollLeft: (this.carrousel.scrollLeft() + 230)
  }, 400, this.animationComplete.bind(this));
};

APP.Carrousel.prototype.prevHandler = function() {
  this.carrousel.animate({
    scrollLeft: (this.carrousel.scrollLeft() - 230)
  }, 400, this.animationComplete.bind(this));
};

APP.Carrousel.prototype.animationComplete = function() {
  if (this.carrousel.scrollLeft() <= 0)
    this.prevBtn.hide();
  else
    this.prevBtn.show();

  var totalWidth = this.carrousel.scrollLeft() + this.carrousel.innerWidth();

  if (totalWidth >= this.carrousel[0].scrollWidth)
    this.nextBtn.hide();
  else
    this.nextBtn.show();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.CarrouselItem = function(data, options) {
  options = options || {};
  if (!options.worked) options.worked = false;

  APP.BaseElement.call(this, data, 'carrousel-item', options);
};

APP.CarrouselItem.prototype = Object.create(APP.BaseElement.prototype);

APP.CarrouselItem.constructor = APP.CarrouselItem;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Collection = function(data, options) {
  APP.BaseElement.call(this, data, 'collection', options);
};

APP.Collection.prototype = Object.create(APP.BaseElement.prototype);

APP.Collection.constructor = APP.Collection;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.CollectionItem = function(data, options) {
  APP.BaseElement.call(this, data, 'collection-item', options);
};

APP.CollectionItem.prototype = Object.create(APP.BaseElement.prototype);

APP.CollectionItem.constructor = APP.CollectionItem;

APP.CollectionItem.prototype.listeners = function() {
  this.view.click(this.clickViewHandler.bind(this));
};

APP.CollectionItem.prototype.clickViewHandler = function() {
  this.view.toggleClass('selected');
  this.dispatchEvent({
    type: Events.COLLECTION_ITEM_SELECTED
  });
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.CreatorProductItem = function(index, data) {
  this.index = index;
  this.view = $('.grid-product-' + index);
  this.header = $('div[data-prod=' + index + ']');

  this.data = data;
  this.currentPhoto;
  this.currentRenderPhoto;
  this.currentPrintPhoto;

  if (this.data) {
    this.config = JSON.parse(this.data.subCategories[0].data);
    $('#canvas-product' + index).attr('width', this.config.widthView);
    $('#canvas-product' + index).attr('height', this.config.heightView);

    this.canvasColor = '#FFFFFF';
    this.canvas = new fabric.Canvas('canvas-product' + index, {
      backgroundColor: this.canvasColor
    });

    this.header.find('.background').find('img').attr('src', this.config.renderImage);
  }

  if (this.data) {
    this.setup();
  }
  this.listeners();
};

APP.CreatorProductItem.constructor = APP.CreatorProductItem;

APP.CreatorProductItem.prototype.listeners = function() {
  var scope = this;

  this.view.find('.part-btn-1').click(this.partBtn1Handler.bind(this));
  this.view.find('.part-btn-2').click(this.partBtn2Handler.bind(this));

  this.view.find('.vertical-align').click(this.verticalAlign.bind(this));
  this.view.find('.horizontal-align').click(this.horizontalAlign.bind(this));
  this.view.find('input[type=range]').change(this.productScaleHandler.bind(this));

  this.view.find('.save-btn-kek').click(this.saveBtnHandler.bind(this));

  var scope = this;
  this.view.find('.cloudinary-fileupload').fileupload({
      start: function(e) {},
      fail: function(e, data) {}
    })
    .off('cloudinarydone').on('cloudinarydone', function(e, data) {
      var image = scope.canvas.item(0);
      work.photo = data.result.url;
      var scale = scope.config.scaleFactor / 10,
        url;
      if (this.data) {
        url = Utils.addImageFilter(work.photo, 'w_' + scale + ',h_' + scale);
      } else {
        url = Utils.addImageFilter(work.photo, 'w_0.5,h_0.5');
      }
      image.setSrc(url, function() {
        image.setCoords();
        scope.canvas.renderAll();
        scope.renderCanvas();
      }, {
        crossOrigin: 'Anonymous'
      });
    });

  var scope = this;
  this.view.find('.margen-input').keyup(function() {
    var index = $(this).data('index');
    var baseprice = $(this).data('baseprice');
    var currentValue = $(this).val();
    var percentage = (currentValue / 100) * baseprice;
    var finalprice = baseprice + percentage;

    scope.data.subCategories[index].finalPrice = finalprice;
    scope.data.subCategories[index].margen = currentValue;

    $($(this).parent().find('p')[1]).text('S/.' + finalprice);
  });
  this.view.find('.margen-input').keyup();
};

APP.CreatorProductItem.prototype.saveBtnHandler = function(e) {
  e.preventDefault();
  this.view.addClass('hide');
};

APP.CreatorProductItem.prototype.productScaleHandler = function(e) {
  var value = e.target.value / 100;
  var image = this.canvas.item(0);
  image.scaleX = image.scaleY = value;
  image.setCoords();
  this.canvas.renderAll();

  this.renderCanvas();
};

APP.CreatorProductItem.prototype.verticalAlign = function(e) {
  e.preventDefault();
  var image = this.canvas.item(0);
  this.canvas.centerObjectV(image);
  image.setCoords();
  this.canvas.renderAll();
  this.renderCanvas();
};

APP.CreatorProductItem.prototype.horizontalAlign = function(e) {
  e.preventDefault();
  var image = this.canvas.item(0);
  this.canvas.centerObjectH(image);
  image.setCoords();
  this.canvas.renderAll();
  this.renderCanvas();
};

APP.CreatorProductItem.prototype.partBtn1Handler = function(e) {
  this.view.find('.part-btn-1').addClass('selected');
  this.view.find('.part-btn-2').removeClass('selected');
  this.view.find('.sales-right-1').show();
  this.view.find('.sales-right-2').hide();
};

APP.CreatorProductItem.prototype.partBtn2Handler = function(e) {
  this.view.find('.part-btn-1').removeClass('selected');
  this.view.find('.part-btn-2').addClass('selected');
  this.view.find('.sales-right-1').hide();
  this.view.find('.sales-right-2').show();
};

APP.CreatorProductItem.prototype.colorChangeHandler = function(color) {
  this.canvasColor = color.toHexString();
  this.canvas.backgroundColor = this.canvasColor;
  this.canvas.renderAll();
  this.renderCanvas();
};

APP.CreatorProductItem.prototype.setup = function() {
  var colorsConf = {
    showPaletteOnly: true,
    showPalette: true,
    color: 'white',
    palette: [
      ['black', 'white', 'blanchedalmond',
        'rgb(255, 128, 0);', 'hsv 100 70 50'
      ],
      ['red', 'yellow', 'green', 'blue', 'violet']
    ],
    change: this.colorChangeHandler.bind(this)
  }
  this.view.find("#colorPicker").spectrum(colorsConf);


  var scope = this;
  var url;
  if (this.data) {
    var scale = 1 / this.config.scaleFactor;
    url = Utils.addImageFilter(work.photo, 'w_' + scale + ',h_' + scale);
  } else {
    url = Utils.addImageFilter(work.photo, 'w_0.5,h_0.5');
  }

  console.log(url);

  var imageTemp;


  fabric.Image.fromURL(url, function(image) {
    imageTemp = image;
    // var ratio = image.width / image.height;
    // if(image.width > 560) image.width = 560; image.height = 560 / ratio;

    scope.canvas.add(image);
    scope.canvas.calcOffset();
    scope.canvas.sendToBack(image);
    scope.canvas.setActiveObject(scope.canvas.item(0));
    scope.canvas.item(0).lockRotation = true;
    scope.canvas.item(0).hasRotatingPoint = false;
    scope.canvas.item(0).lockUniScaling = true;

    scope.canvas.centerObject(image);
    image.setCoords();

    scope.renderCanvas();

    fabric.Image.fromURL(scope.config.guideImage, function(img) {
      console.log(scope.canvas.width);
      console.log('width =>');
      console.log(img.width);
      console.log('height =>');
      console.log(img.height);
      img.evented = img.selectable = false;
      img.left = img.top = -1;
      scope.canvas.add(img);
      console.log('width =>', img.width);

      // scope.canvas.centerObject(image);
      img.setCoords();
      scope.canvas.renderAll();
    }, {
      crossOrigin: 'Anonymous'
    });
  }, {
    crossOrigin: 'Anonymous'
  });

  // this.canvas.loadFromJSON(data,  this.canvas.renderAll.bind(this.canvas), function(o, object) {
  //   fabric.log(o, object);
  // });
  this.canvas.on('mouse:up', function(options) {
    scope.renderCanvas(options);
  });
};

APP.CreatorProductItem.prototype.renderCanvas = function() {
  var image = this.canvas.item(0);
  image.hasBorders = image.hasControls = false;

  if (this.canvas.item(1)) {
    this.canvas.item(1).opacity = 0;
  }

  this.canvas.renderAll();
  var url = this.canvas.toDataURL({
    left: this.config.offsetX,
    top: this.config.offsetY,
    width: this.config.widthRender,
    height: this.config.heightRender
  });

  this.header.find('.image-preview').attr('src', url);

  // .css('width', 'auto').css('height', this.config.heightRender /2);

  var urlImage = work.photo;
  var baseName = urlImage.replace(/^.*\/|\.[^.]*$/g, '')

  var boundaries = image.getBoundingRect();
  var x = Math.round(boundaries.left * this.config.scaleFactor);
  var y = Math.round(boundaries.top * this.config.scaleFactor);
  var stageW = Math.round(this.config.widthView * this.config.scaleFactor);
  var stageH = Math.round(this.config.heightView * this.config.scaleFactor);
  var imageW = Math.round(image.getWidth() * this.config.scaleFactor);
  var imageH = Math.round(image.getHeight() * this.config.scaleFactor);
  var rgbColor = this.canvasColor.replace('#', '');
  var filters =
    'w_' + stageW + ',' +
    'h_' + stageH + ',e_colorize,co_rgb:' + rgbColor + '/' +
    'l_' + baseName + ',b_rgb:' + rgbColor + ',' +
    'w_' + imageW + ',' +
    'h_' + imageH + ',' +
    'x_' + x + ',' +
    'y_' + y + ',g_north_west/' +
    'x_' + (x < 0 ? (x * -1) : 0) + ',' +
    'y_' + (y < 0 ? (y * -1) : 0) + ',' +
    'w_' + stageW + ',' +
    'h_' + stageH + ',c_crop,g_north_west';

  this.currentPrintPhoto = Utils.addImageFilter(urlImage, filters);
  console.log('print : ', this.currentPrintPhoto);

  x = Math.round((boundaries.left * this.config.scaleFactor) - (this.config.offsetX * this.config.scaleFactor));
  y = Math.round((boundaries.top * this.config.scaleFactor) - (this.config.offsetY * this.config.scaleFactor));

  var renderName = this.config.renderImage.replace(/^.*\/|\.[^.]*$/g, '')

  filters =
    'w_' + stageW + ',' +
    'h_' + stageH + ',e_colorize,co_rgb:' + rgbColor + '/' +
    'l_' + baseName + ',b_rgb:' + rgbColor + ',' +
    'w_' + imageW + ',' +
    'h_' + imageH + ',' +
    'x_' + x + ',' +
    'y_' + y + ',g_north_west/' +
    'x_' + ((x < 0 ? (x * -1) : 0)) + ',' +
    'y_' + (y < 0 ? (y * -1) : 0) + ',' +
    'w_' + Math.round(this.config.widthRender * this.config.scaleFactor) + ',' +
    'h_' + Math.round(this.config.heightRender * this.config.scaleFactor) +
    ',c_crop,g_north_west/';

  if (this.index === 2) {
    filters += 'w_' + Math.round(this.config.widthRender) + ',h_' +
      Math.round(this.config.heightRender) + '/l_' + renderName;
  }

  if (this.index === 3) {
    filters += 'w_230/e_distort:-15:90:220:60:215:360:-15:382/c_pad,h_2,w_1.0/' +
      'l_radial,e_displace,y_-20/e_trim/' + '/l_' + renderName;
  }

  if (this.index === 4) {
    filters += 'w_' + Math.round(this.config.widthRender) + ',h_' +
      Math.round(this.config.heightRender) + '/l_' + renderName;
  }

  this.currentRenderPhoto = Utils.addImageFilter(urlImage, filters);
  console.log('render', this.currentRenderPhoto);


  image.hasBorders = image.hasControls = true;
  if (this.canvas.item(1)) {
    this.canvas.item(1).opacity = 1;
  }
  this.canvas.renderAll();
};

APP.CreatorProductItem.prototype.open = function() {
  this.view.removeClass('hide');
};

APP.CreatorProductItem.prototype.getPayload = function() {
  if (this.index === 0) {
    return [];
  }

  var checked = this.view.find('input[type=checkbox]:checked');
  var result = [];
  for (var i = 0; i < checked.length; i++) {
    var index = $(checked[i]).data('index');
    var subcategory = this.data.subCategories[index];
    var item = {
      WorkId: work.id,
      CategoryId: this.data.subCategories[index].id,
      name: work.name,
      photo: this.currentRenderPhoto,
      printPhoto: this.currentPrintPhoto,
      finalPrice: subcategory.finalPrice.toString(),
      description: work.description,
      canvas: JSON.stringify(this.canvas.toJSON()),
      config: JSON.stringify({
        data: JSON.parse(this.data.subCategories[index].data),
        margen: subcategory.margen,
        range: this.view.find('input[type=range]').val(),
        bgCanvas: this.canvas.backgroundColor
      })
    };
    result.push(item);
  }
  return result;
};

APP.CreatorProductItem.prototype.close = function() {
  this.view.addClass('hide');
};

/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.FeedUserFollow = function(data, options) {
  var friends = data.element.friends;
  if (friends.length > 0) {
    data.element.currentFriend = friends[_.random(0, friends.length - 1)];
  } else {
    data.element.currentFriend = null;
  }
  APP.BaseElement.call(this, data, 'feed-user-follow', options);
};

APP.FeedUserFollow.prototype = Object.create(APP.BaseElement.prototype);

APP.FeedUserFollow.constructor = APP.FeedUserFollow;

APP.FeedUserFollow.prototype.listeners = function() {
  this.followBtn = this.view.find('.am-Follow-button');
  this.followBtn.click(this.followClickHandler.bind(this));
}

APP.FeedUserFollow.prototype.followClickHandler = function() {
  var scope = this;
  if (this.data.element.following) {
    var url = DataApp.currentUser.url + '/unfollow/';
    $.post(url, {
      idUser: this.data.element.id
    }, function(response) {
      if (response.status === 200) {
        scope.data.element.following = false;
        $('.am-Follow-button').removeClass('following').text('+Seguir');
      }
    });
  } else {
    var url = DataApp.currentUser.url + '/follow/';
    $.post(url, {
      idUser: this.data.element.id
    }, function(response) {
      if (response.status === 200) {
        scope.data.element.following = true;
        $('.am-Follow-button').addClass('following').text('Siguiendo');
      }
    });
  }
  console.log('following');
}
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.FeedWorkCreated = function(data, options) {
  APP.BaseElement.call(this, data, 'feed-work-created', options);
};

APP.FeedWorkCreated.prototype = Object.create(APP.BaseElement.prototype);

APP.FeedWorkCreated.constructor = APP.FeedWorkCreated;
APP.FeedWorkCreated.prototype.listeners = function() {
  this.addCollectionBtn = this.view.find('.add-collection');
  this.likeBtn = this.view.find('.like');
  this.shareBtn = this.view.find('.share');
  this.afterLike = this.view.find('.after-like');
  this.followBtn = this.view.find('.am-Follow-button');

  if (this.data.element.User.following) {
    this.followBtn.addClass('following').text('Siguiendo');
  }
  this.addCollectionBtn.click(this.addCollectionHandler.bind(this));
  this.likeBtn.click(this.likeHandler.bind(this));
  this.shareBtn.click(this.shareHandler.bind(this));
  this.followBtn.click(this.followHandler.bind(this));
};

APP.FeedWorkCreated.prototype.addCollectionHandler = function() {
  $('#go-collection-modal').click();
  Broadcaster.dispatchEvent(Events.ADD_COLLECTION, {
    data: {
      work: this.data.element
    }
  });
};

APP.FeedWorkCreated.prototype.likeHandler = function() {
  if (!this.likeBtn.hasClass('active')) {
    var url = DataApp.currentUser.url + '/work/like';
    var scope = this;
    $.post(url, {
      idWork: this.data.element.id
    }, function(response) {
      if (response.status === 200) {
        scope.likeBtn.addClass('active');
        scope.afterLike.show();
      }
    });
  }
};

APP.FeedWorkCreated.prototype.shareHandler = function() {
  $('#go-share-modal').click();
  Broadcaster.dispatchEvent(Events.SHARE, {
    data: {
      work: this.data.element
    }
  });
};

APP.FeedWorkCreated.prototype.followHandler = function() {
  var scope = this;
  if (this.data.element.User.following) {
    var url = DataApp.currentUser.url + '/unfollow/';
    $.post(url, {
      idUser: this.data.element.User.id
    }, function(response) {
      if (response.status === 200) {
        scope.data.element.User.following = false;
        $('.am-Follow-button').removeClass('following').text('+Seguir');
      }
    });
  } else {
    var url = DataApp.currentUser.url + '/follow/';
    $.post(url, {
      idUser: this.data.element.User.id
    }, function(response) {
      if (response.status === 200) {
        scope.data.element.User.following = true;
        $('.am-Follow-button').addClass('following').text('Siguiendo');
      }
    });
  }
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationAcceptedProduct = function(data, options) {
  APP.BaseElement.call(this, data, 'notification-accepted-product', options);
};

APP.NotificationAcceptedProduct.prototype = Object.create(APP.BaseElement.prototype);

APP.NotificationAcceptedProduct.constructor = APP.NotificationAcceptedProduct;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationDeniedProduct = function(data, options) {
  data.data = JSON.parse(data.data);
  APP.BaseElement.call(this, data, 'notification-denied-product', options);
};

APP.NotificationDeniedProduct.prototype = Object.create(APP.BaseElement.prototype);

APP.NotificationDeniedProduct.constructor = APP.NotificationDeniedProduct;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationFollow = function(data, options) {
  APP.BaseElement.call(this, data, 'notification-follow', options);
};

APP.NotificationFollow.prototype = Object.create(APP.BaseElement.prototype);

APP.NotificationFollow.constructor = APP.NotificationFollow;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationLike = function(data, options) {
  APP.BaseElement.call(this, data, 'notification-like', options);
};

APP.NotificationLike.prototype = Object.create(APP.BaseElement.prototype);

APP.NotificationLike.constructor = APP.NotificationLike;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationRequest = function(data, options) {
  APP.BaseElement.call(this, data, 'notification-request', options);
};

APP.NotificationRequest.prototype = Object.create(APP.BaseElement.prototype);

APP.NotificationRequest.constructor = APP.NotificationRequest;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationReview = function(data, options) {
  APP.BaseElement.call(this, data, 'notification-review', options);
};

APP.NotificationReview.prototype = Object.create(APP.BaseElement.prototype);

APP.NotificationReview.constructor = APP.NotificationReview;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};
APP.PhotoSwipe = function(tag) {
  this.tag = tag;
  this.filter = 'w_1500,h_800,c_limit,q_80';

  this.isLoading = false;
  this.zoom = false;
  this.meta = null;

  this.setupUI();
  this.listeners();
};

APP.PhotoSwipe.constructor = APP.PhotoSwipe;

APP.PhotoSwipe.prototype.setupUI = function() {
  this.image = $('#work-image');
  this.pswp = $('.pswp')[0];
  this.modal = $('#go-preload-modal');
};


APP.PhotoSwipe.prototype.listeners = function() {
  this.image.click(this.imageHandler.bind(this));
};

APP.PhotoSwipe.prototype.imageHandler = function() {
  if (!this.zoom) {
    this.modal.click();

    this.isLoading = true;
    var src;
    if (this.tag === 'work') {
      src = Utils.addImageFilter(work.photo, this.filter);
    } else {
      src = Utils.addImageFilter(product.photo, this.filter);
    }

    var scope = this;
    $('<img>').load(function() {
      scope.imageLoadHandler(this);
    }).attr('src', src);

    this.zoom = true;

  } else {
    if (this.isLoading) {
      this.modal.click();
    }
  }
};

APP.PhotoSwipe.prototype.imageLoadHandler = function(image) {
  $('#lean_overlay').click();

  this.isLoading = false;
  this.meta = {
    width: image.width,
    height: image.height
  };
  this.image.click(this.openPhotoSwipeHandler.bind(this));
  this.image.click();
};

APP.PhotoSwipe.prototype.openPhotoSwipeHandler = function() {
  var src;
  if (this.tag === 'work') {
    src = Utils.addImageFilter(work.photo, this.filter);
  } else {
    src = Utils.addImageFilter(product.photo, this.filter);
  }
  var items = [{
    src: src,
    w: this.meta.width,
    h: this.meta.height
  }];

  var scope = this;
  var options = {
    getThumbBoundsFn: function() {
      return {
        x: scope.image.offset.left,
        y: scope.image.offset.top + 50,
        w: scope.image.width()
      }
    }
  };
  new PhotoSwipe(this.pswp, PhotoSwipeUI_Default, items, options).init();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Post = function(data, options) {
  APP.BaseElement.call(this, data, 'post', options);
};

APP.Post.prototype = Object.create(APP.BaseElement.prototype);

APP.Post.constructor = APP.Post;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.PostMinimal = function(data, options) {
  APP.BaseElement.call(this, data, 'post-minimal', options);
};

APP.PostMinimal.prototype = Object.create(APP.BaseElement.prototype);

APP.PostMinimal.constructor = APP.PostMinimal;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Product = function(data, options) {
  APP.BaseElement.call(this, data, 'product', options);
};

APP.Product.prototype = Object.create(APP.BaseElement.prototype);

APP.Product.constructor = APP.Product;


APP.Product.prototype.listeners = function() {
  APP.BaseElement.prototype.listeners.call(this);
  this.view.find('.delete').click(this.deleteHandler.bind(this));
  this.view.find('.edit').click(this.editHandler.bind(this));
};

APP.Product.prototype.deleteHandler = function() {
  var url = '/user/' + this.data.User.username + '/product/delete';
  var scope = this;
  $.post(url, {
    idProduct: this.data.id
  }, function(response) {
    if (response.status === 200)
      $(scope.view.parent()).masonry('remove', scope.view).masonry();
  });
};

APP.Product.prototype.editHandler = function() {
  location.href = '/user/' + this.data.User.username + '/product/' + this.data.nameSlugify + '/edit';
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.RequestItem = function(data, options) {
  data.from = data.from || null;
  data.data = JSON.parse(data.data);
  data.Product.config = JSON.parse(data.Product.config);
  data.artistRevenue = (Number(data.Product.config.margen) / 100 * data.Product.finalPrice);
  data.amRevenue = data.Product.finalPrice - data.artistRevenue;
  data.subtotal = data.artistRevenue + data.amRevenue;
  data.shipping = data.data.shipping;
  data.total = data.subtotal + data.shipping;

  APP.BaseElement.call(this, data, 'request-item', options);

  var scope = this;
  var step1 = this.view.find('.step-1');
  var step2 = this.view.find('.step-2');
  var step3 = this.view.find('.step-3');
  var step4 = this.view.find('.step-4');
  var step5 = this.view.find('.step-5');

  this.currentStep = this.data.status;

  if (this.currentStep === 'recibido') {
    step1.removeClass('hide');
  }
  if (this.currentStep === "paso2") {
    step2.removeClass('hide');
  }
  if (this.currentStep === "paso3") {
    step3.removeClass('hide');
  }
  if (this.currentStep === "paso4") {
    step4.removeClass('hide');
  }

  if (this.currentStep === "paso5") {
    step5.removeClass('hide');
  }

  var scope = this;

  step1.find('.yes').click(function(e) {
    e.preventDefault();

    scope.nextStepCaller({
      idOrder: data.id,
      currentStatus: scope.currentStep
    });

    step1.addClass('hide');
    step2.removeClass('hide');
  });

  step1.find('.no').click(function(e) {
    e.preventDefault();
    scope.nextStepCaller({
      idOrder: data.id,
      currentStatus: 'declined'
    });
  });

  step2.find('.done').click(function(e) {
    e.preventDefault();
    scope.nextStepCaller({
      idOrder: data.id,
      currentStatus: scope.currentStep
    });
    step2.addClass('hide');
    step3.removeClass('hide');
  });

  step3.find('.done').click(function(e) {
    e.preventDefault();
    scope.nextStepCaller({
      idOrder: data.id,
      currentStatus: scope.currentStep
    });
    step3.addClass('hide');
    step4.removeClass('hide');
  });

  step4.find('.upload').click(function() {
    scope.nextStepCaller({
      idOrder: data.id,
      currentStatus: scope.currentStep
    });
    step4.addClass('hide');
    step5.removeClass('hide');
  });

  // this.view.find('.cloudinary-fileupload').fileupload({
  //     start: function(e) {},
  //     fail: function(e, data) {}
  //   })
  // .off('cloudinarydone').on('cloudinarydone', function(e, data) {
  //   console.log(data);
  //   });
};

APP.RequestItem.prototype = Object.create(APP.BaseElement.prototype);

APP.RequestItem.constructor = APP.RequestItem;

APP.RequestItem.prototype.nextStepCaller = function(payload) {
  var url = DataApp.currentUser.url + '/account/next_step';
  $.post(url, payload).then(this.nextStepHandler.bind(this));
};

APP.RequestItem.prototype.nextStepHandler = function(response) {
  console.log(response);
  this.currentStep = response.data.order.status;
  console.log(this.currentStep);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Review = function(data, options) {
  APP.BaseElement.call(this, data, 'review', options);
};

APP.Review.prototype = Object.create(APP.BaseElement.prototype);

APP.Review.constructor = APP.Review;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.TableBlog = function(data, options) {
  APP.BaseElement.call(this, data, 'table-blog', options);
};

APP.TableBlog.prototype = Object.create(APP.BaseElement.prototype);

APP.TableBlog.constructor = APP.TableBlog;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.TableProduct = function(data, options) {
  APP.BaseElement.call(this, data, 'table-product', options);
};

APP.TableProduct.prototype = Object.create(APP.BaseElement.prototype);

APP.TableProduct.constructor = APP.TableProduct;

APP.TableProduct.prototype.listeners = function() {
  this.featuredBtn = this.view.find('.featured-btn');
  this.featuredBtn.click(this.featuredHandler.bind(this));
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.TableProductApplying = function(data, options) {
  APP.BaseElement.call(this, data, 'table-product-applying', options);
};

APP.TableProductApplying.prototype = Object.create(APP.BaseElement.prototype);

APP.TableProductApplying.constructor = APP.TableProductApplying;

APP.TableProductApplying.prototype.listeners = function() {};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.TableUser = function(data, options) {
  APP.BaseElement.call(this, data, 'table-user', options);
};

APP.TableUser.prototype = Object.create(APP.BaseElement.prototype);

APP.TableUser.constructor = APP.TableUser;

APP.TableUser.prototype.listeners = function() {
  this.featuredBtn = this.view.find('.featured-btn');
  this.featuredBtn.click(this.featuredHandler.bind(this));
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.TableWork = function(data, options) {
  APP.BaseElement.call(this, data, 'table-work', options);
};

APP.TableWork.prototype = Object.create(APP.BaseElement.prototype);

APP.TableWork.constructor = APP.TableWork;

APP.TableWork.prototype.listeners = function() {
  this.featuredBtn = this.view.find('.featured-btn');
  this.featuredBtn.click(this.featuredHandler.bind(this));
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.UploaderImage = function(view, onComplete, options) {
  this.$view = view;
  this.photo = null;
  this.options = options || {
    uploader: $('.cloudinary-fileupload')
  };
  this.uploader = this.options.uploader;
  this.listeners();
  this.onComplete = onComplete;
};

APP.UploaderImage.constructor = APP.UploaderImage;

APP.UploaderImage.prototype.listeners = function() {
  var scope = this;
  this.uploader.fileupload({
      start: function(e) {
        scope.$view.find('.upload').hide();
        $(this).hide();
        scope.$view.find('.preload').removeClass('hide');
        scope.$view.find('.preload').show();
      },
      fail: function(e, data) {
        scope.$view.find('.upload').show();
        $(this).show();
        scope.$view.find('.preload').hide();
      }
    })
    .off('cloudinarydone').on('cloudinarydone', function(e, data) {
      scope.$view.find('.preload').hide();
      scope.$view.find('.preview').html('');
      scope.photo = data.result.url;
      if (!scope.onComplete) {
        var filters = {
          format: data.result.format,
          width: 200,
          height: 200,
          crop: "thumb"
        };
        $.cloudinary.image(data.result.public_id, filters).appendTo(scope.$view.find('.preview'));
      } else {
        scope.onComplete(data.result.public_id);
      }
    });
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.User = function(data, options) {
  APP.BaseElement.call(this, data, 'user', options);
};

APP.User.prototype = Object.create(APP.BaseElement.prototype);

APP.User.constructor = APP.User;

APP.User.prototype.listeners = function() {
  APP.BaseElement.prototype.listeners.call(this);
  this.view.find('.am-Follow-button').click(this.followHandler.bind(this));
};

APP.User.prototype.followHandler = function() {
  if (this.isLogged()) {
    var action = this.data.following ? 'unfollow' : 'follow';
    var options = {
      url: DataApp.currentUser.url + '/' + action,
      data: {
        idUser: this.data.id
      }
    };
    Utils.getData(options).then(this.followHandlerComplete.bind(this));
  }
};

APP.User.prototype.followHandlerComplete = function(response) {
  if (response.status === 200) {
    if (this.data.following) {
      this.view.find('.am-Follow-button').removeClass('following').text('+Seguir');
    } else {
      this.view.find('.am-Follow-button').addClass('following').text('Siguiendo');
    }
    this.data.following = !this.data.following;
  }
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Work = function(data, options) {
  APP.BaseElement.call(this, data, 'work', options);
};

APP.Work.prototype = Object.create(APP.BaseElement.prototype);

APP.Work.constructor = APP.Work;


APP.Work.prototype.listeners = function() {
  APP.BaseElement.prototype.listeners.call(this);
  this.view.find('.delete-new').click(this.deleteHandler.bind(this));
  this.view.find('.delete-force').click(this.deleteForceHandler.bind(this));
  this.view.find('.cancel').click(this.cancelHandler.bind(this));
  this.view.find('.edit').click(this.editHandler.bind(this));
  this.view.find('.settings-btn').click(this.settingsHandler.bind(this));
};

APP.Work.prototype.settingsHandler = function() {
  if (this.view.find('.menu-settings').hasClass('hide')) {
    this.view.find('.menu-settings').removeClass('hide');
  } else {
    this.view.find('.menu-settings').addClass('hide');
  }
};

APP.Work.prototype.deleteHandler = function(e) {
  e.preventDefault();
  this.view.find('.menu-settings').addClass('hide');
  this.view.find('.delete-confirm').show();
};

APP.Work.prototype.deleteForceHandler = function() {
  if (this.options.context === 'single-collection') {
    var url = '/user/' + this.data.User.username + '/work/remove_from_collection';
    var scope = this;
    $.post(url, {
      idWork: this.data.id,
      idCollection: collection.id
    }, function(response) {
      if (response.status === 200)
        $(scope.view.parent()).masonry('remove', scope.view).masonry();
    });
  } else {
    var url = '/user/' + this.data.User.username + '/work/delete';
    var scope = this;
    $.post(url, {
      idWork: this.data.id
    }, function(response) {
      if (response.status === 200)
        $(scope.view.parent()).masonry('remove', scope.view).masonry();
    });
  }
};

APP.Work.prototype.cancelHandler = function() {
  this.view.find('.delete-confirm').hide();
};


APP.Work.prototype.editHandler = function() {
  location.href = '/user/' + this.data.User.username + '/work/' + this.data.nameSlugify + '/edit';
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NavigationManager = function(navigation) {
  this.navigator;
  switch (navigation) {
    case APP.NavigationManager.PAGINATION:
      this.navigator = new APP.PaginationNavigation();
      break;
    case APP.NavigationManager.INFINITE:
    default:
      this.navigator = new APP.InfiniteNavigation();
      break;
  }
};
APP.NavigationManager.INFINITE = 'infinite';
APP.NavigationManager.PAGINATION = 'pagination';

APP.NavigationManager.prototype = Object.create(Object.prototype);

APP.NavigationManager.constructor = APP.NavigationManager;
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.RestClientManager = function() {
  APP.RestClientManager.instance = this;
};

APP.RestClientManager.prototype = Object.create(Object.prototype);

APP.RestClientManager.constructor = APP.RestClientManager;

APP.RestClientManager.prototype.execute = function(config) {
  config.method = config.method || 'post';
  return $.ajax(config);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.TemplateManager = function() {
  APP.TemplateManager.instance = this;
  this.templates = {};
};

APP.TemplateManager.prototype = Object.create(Object.prototype);

APP.TemplateManager.constructor = APP.TemplateManager;

APP.TemplateManager.prototype.loadTemplates = function(ids) {
  var scope = this,
    i, deferreds = [];
  for (i = 0; i < ids.length; i++)
    deferreds.push($.get(DataApp.templatesUrl + ids[i] + ".html"));

  return $.when.apply(null, deferreds).done(function() {
    if (ids.length <= 1) return scope.templates[ids[0]] = arguments[0];
    for (i = 0; i < ids.length; i++)
      scope.templates[ids[i]] = _.template(arguments[i][0]);
  });
};

APP.TemplateManager.prototype.getFromDoc = function(id) {
  if (this.templates[id])
    return this.templates[id];

  this.templates[id] = _.template($("#template-" + id).html());
  return this.templates[id];
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.BaseNavigation = function() {
  this.currentPage = 0;
  this.totalPages = null;

  this.currentPageData;
  this.listeners();

  this.needChangeUrl = false;
};

APP.BaseNavigation.constructor = APP.BaseNavigation;
APP.BaseNavigation.prototype = Object.create(EventDispatcher.prototype);

APP.BaseNavigation.prototype.start = function() {};

APP.BaseNavigation.prototype.listeners = function() {};

APP.BaseNavigation.prototype.suspend = function() {};

APP.BaseNavigation.prototype.restart = function() {};

APP.BaseNavigation.prototype.gotoPage = function(next, force) {
  var nextPage = next || this.currentPage + 1;
  if (!force) {
    if (this.currentPage === nextPage) return;
    if (this.currentPage === 0) this.currentPage = 1;
  }

  if (this.totalPages) {
    if (nextPage > this.totalPages) return;
  }

  this.dispatchEvent({
    type: Events.LOAD_START
  });

  this.newPageUrl(nextPage);

  Utils.getData({
    url: DataApp.currentUrl
  }).done(this.afterGetData.bind(this));
};

APP.BaseNavigation.prototype.afterGetData = function(response) {
  console.log(response);
  this.currentPage = response.pagination.page;
  this.totalPages = response.pagination.pages;
  this.currentPageData = response;
  this.dispatchEvent({
    type: Events.LOAD_END,
    data: response
  });
};

APP.BaseNavigation.prototype.newPageUrl = function(newPage) {
  DataApp.currentUrl = DataApp.currentUrl.replace(/\/$/g, '');
  if (DataApp.currentUrl.indexOf('/page-') === -1)
    DataApp.currentUrl += '/page-' + this.currentPage;
  DataApp.currentUrl = DataApp.currentUrl.replace('page-' + this.currentPage, 'page-' + newPage);
};

APP.BaseNavigation.prototype.reset = function() {
  this.currentPageData = null;
  this.gotoPage(1, true);
  Utils.changeUrl('', DataApp.currentUrl);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.InfiniteNavigation = function() {
  APP.BaseNavigation.call(this);
  this.counter = 0;
};

APP.InfiniteNavigation.prototype = Object.create(APP.BaseNavigation.prototype);

APP.InfiniteNavigation.constructor = APP.InfiniteNavigation;

APP.InfiniteNavigation.prototype.listeners = function() {
  this.scrollHandler = this.scrollHandler.bind(this);
  $(window).on("scroll", this.scrollHandler);
};

APP.InfiniteNavigation.prototype.scrollHandler = function() {
  if ($(window).scrollTop() >= ($(document).height() - $(window).height() - $('.am-Footer').height())) {
    ++this.counter;
    if (this.counter === 1) {
      this.suspend();
      this.gotoPage(this.currentPage + 1);
    }
  }
}

APP.InfiniteNavigation.prototype.suspend = function() {
  $(window).off("scroll", this.scrollHandler);
}

APP.InfiniteNavigation.prototype.restart = function() {
  this.counter = 0;
  $(window).on("scroll", this.scrollHandler);
}
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.PaginationNavigation = function() {
  this.maxButtons = 6;
  APP.BaseNavigation.call(this);
};

APP.PaginationNavigation.prototype = Object.create(APP.BaseNavigation.prototype);

APP.PaginationNavigation.constructor = APP.PaginationNavigation;

APP.PaginationNavigation.prototype.start = function() {
  this.makeButtons();
};

APP.PaginationNavigation.prototype.listeners = function() {
  $(document).on('click', '.np-page-button', this.pagesHandler.bind(this));
};

APP.PaginationNavigation.prototype.pagesHandler = function(event) {
  event.preventDefault();
  var buttonPage = $(event.currentTarget).attr('id');
  this.gotoPage(buttonPage);
};

APP.PaginationNavigation.prototype.build = function() {
  this.makeButtons();
};

APP.PaginationNavigation.prototype.makeButtons = function() {
  $('.am-Pagination').empty();
  var numbers = Utils.paginationButtons(this.currentPage, this.totalPages, this.maxButtons);
  if (numbers) {
    var i = 0;
    for (i; i < numbers.length; i++) {
      var link = DataApp.currentUrl.replace('page-' + +this.currentPage, 'page-' + numbers[i]);
      var view = $('<li style="display:inline-block;margin:10px;"><a class="np-page-button" href="' + link + '">' + numbers[i] + '</a></li>');
      $('.am-Pagination').append(view);
    }
  }
};
/**
 * @author www.juliocanares.com/cv
 * @email juliocanares@gmail.com
 */
Utils = {
  isMobile: {
    Android: function() {
      return navigator.userAgent.match(/Android/i);
    },
    BlackBerry: function() {
      return navigator.userAgent.match(/BlackBerry/i);
    },
    iOS: function() {
      return navigator.userAgent.match(/iPhone|iPad|iPod/i);
    },
    Opera: function() {
      return navigator.userAgent.match(/Opera Mini/i);
    },
    Windows: function() {
      return navigator.userAgent.match(/IEMobile/i);
    },
    any: function() {
      return (Utils.isMobile.Android() || Utils.isMobile.BlackBerry() ||
        Utils.isMobile.iOS() || Utils.isMobile.Opera() || Utils.isMobile.Windows());
    }
  },
  paginationButtons: function(currentPage, totalPages, maxButtons) {
    var i, result = [1],
      middle = Math.floor(maxButtons / 2);

    if (currentPage > totalPages)
      return null;

    if (totalPages < maxButtons) {
      for (i = 2; i < totalPages + 1; i++)
        result.push(i);
      return result;
    }

    if (currentPage <= middle && currentPage > 0)
      for (i = 2; i < maxButtons; i++)
        result.push(i);

    var maxLimit = (totalPages - middle);

    if (currentPage > middle && currentPage < maxLimit) {
      var steps = ((maxButtons - 3) / 2);
      for (i = currentPage - steps; i < currentPage + steps + 1; i++)
        result.push(i);
    }

    if (currentPage >= maxLimit && currentPage <= totalPages) {
      for (i = (totalPages - (maxButtons - 2)); i < totalPages; i++)
        result.push(i);
    }

    result.push(totalPages);
    return result;
  },
  getUrlParameter: function(sParam) {
    var sPageURL = window.location.search.substring(1)
    var sURLVariables = sPageURL.split('&')
    for (var i = 0; i < sURLVariables.length; i++) {
      var sParameterName = sURLVariables[i].split('=')
      if (sParameterName[0] == sParam)
        return sParameterName[1]
    }
  },
  capitalize: function(text) {
    return text.charAt(0).toUpperCase() + text.substring(1);
  },
  getData: function(params) {
    return APP.RestClientManager.instance.execute(params);
  },
  changeUrl: function(page, url) {
    DataApp.currentUrl = url;
    if (typeof(history.pushState) != 'undefined') {
      var tempUrl = {
        page: page,
        url: url
      };
      // history.pushState(tempUrl, tempUrl.page, tempUrl.url);
      history.replaceState(tempUrl, tempUrl.page, tempUrl.url);
    } else {
      window.location.href = "/";
    }
  },
  addImageFilter: function(url, filter) {
    if (url.indexOf('upload') > -1)
      return url.replace('upload/', 'upload/' + filter + '/');
  },
  checkAuthentication: function() {
    if (!DataApp.currentUser) {
      if (window.location.href.indexOf('auth') === -1)
        Cookies.set('return_to', window.location.href, {
          maxAge: 3600000,
          domain: '.' + document.domain
        });

      window.location.href = DataApp.loginUrl;
    }
  },
  share: {
    facebook: function(options, complete) {
      options.method = 'feed';
      window.FB && FB.ui(options, complete);
    }
  },
  shareFBWork: function(work) {
    $('#lean_overlay').trigger("click");
    Utils.share.facebook({
      link: DataApp.baseUrl + 'user/' + work.User.username + '/work/' + work.nameSlugify,
      picture: Utils.addImageFilter(work.photo, 'w_1200,h_630,q_60,c_crop'),
      name: work.name,
      caption: 'Arte Manifiesto',
      description: work.description
    });
  },
  shareTWWork: function(work) {
    var link = DataApp.baseUrl + 'user/' + work.User.username + '/work/' + work.nameSlugify;
    var text = encodeURIComponent(work.name + ' vía (@artemanifiesto)');
    var url = "https://twitter.com/intent/tweet?text=" + text;
    url += "&url=" + encodeURIComponent(link);
    window.open(url, "_blank", "height=300,width=550,resizable=1");
  },
  shareFBPost: function(post) {
    Utils.share.facebook({
      link: DataApp.baseUrl + 'blog/post/' + post.nameSlugify,
      picture: Utils.addImageFilter(post.photo, 'w_1200,h_630,q_60,c_crop'),
      name: post.name,
      caption: 'Arte Manifiesto | Blog',
      description: post.description
    });
  },
  shareTWPost: function(post) {
    var link = DataApp.baseUrl + 'blog/post/' + post.nameSlugify;
    var text = encodeURIComponent(post.name + ' vía (@artemanifiesto)');
    var url = "https://twitter.com/intent/tweet?text=" + text;
    url += "&url=" + encodeURIComponent(link);
    window.open(url, "_blank", "height=300,width=550,resizable=1");
  },
  removeURLParameter: function(url, parameter) {
    var urlparts = url.split('?');
    if (urlparts.length >= 2) {
      var prefix = encodeURIComponent(parameter) + '=';
      var pars = urlparts[1].split(/[&;]/g);

      for (var i = pars.length; i-- > 0;) {
        if (pars[i].lastIndexOf(prefix, 0) !== -1) {
          pars.splice(i, 1);
        }
      }

      url = urlparts[0] + '?' + pars.join('&');
      return url;
    } else {
      return url;
    }
  },
  updateQueryStringParameter: function(uri, key, value) {
    var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
    var separator = uri.indexOf('?') !== -1 ? "&" : "?";
    if (uri.match(re)) {
      return uri.replace(re, '$1' + key + "=" + value + '$2');
    } else {
      return uri + separator + key + "=" + value;
    }
  }
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AccountConfigurationScreen = function() {
  APP.BaseScreen.call(this, 'accountConfiguration');
};

APP.AccountConfigurationScreen.constructor = APP.AccountConfigurationScreen;
APP.AccountConfigurationScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AccountConfigurationScreen.prototype.setupUI = function() {
  this.delete = $('.delete');
  this.deleteForce = $('.work-delete-force');
  this.cancel = $('.cancel-icon');
  $('.work-delete-confirm').hide();
};

APP.AccountConfigurationScreen.prototype.listeners = function() {
  this.delete.click(this.deleteStoreBtnHandler.bind(this));
  this.deleteForce.click(this.deleteForceHandler.bind(this));
  this.cancel.click(this.cancelBtnHandler.bind(this));
};

APP.AccountConfigurationScreen.prototype.cancelBtnHandler = function(e) {
  e.preventDefault();
  $('.work-delete-confirm').hide();
  this.delete.show();
};

APP.AccountConfigurationScreen.prototype.deleteForceHandler = function(e) {
  e.preventDefault();
  var url = '/user/' + user.username + '/account/deactivate';
  this.requestHandler(url, {}, this.afterUnSeller);
};

APP.AccountConfigurationScreen.prototype.deleteStoreBtnHandler = function(e) {
  e.preventDefault();
  this.delete.hide();
  $('.work-delete-confirm').show();
};
APP.AccountConfigurationScreen.prototype.afterUnSeller = function(e) {
  this.showFlash('succes', 'Se ha desactivado tu cuenta');
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    window.location.href = '/';
  }, 1000);
};

/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AccountIndexScreen = function() {
  APP.BaseScreen.call(this, 'accountIndex');

  this.timeout = null;
  this.isUserAvailable = true;
};

APP.AccountIndexScreen.constructor = APP.AccountIndexScreen;
APP.AccountIndexScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AccountIndexScreen.prototype.setupUI = function() {
  this.uploaderImage = new APP.UploaderImage($('.uploader-profile'), this.uploaderImageComplete);
  this.uploaderImage.photo = DataApp.currentUser.photo;

  this.save = $('.save');
  this.saveLoading = $('.save-loading');
  this.isArtist = $('input[name=isArtist]');
  this.firstname = $('input[name=firstname]');
  this.lastname = $('input[name=lastname]');
  this.pseudonimo = $('input[name=pseudonimo]');
  this.username = $('input[name=username]');
  this.gender = $('select[name=gender]');
  this.birthday = $('input[name=birthday]');
  this.country = $('select[name=country]');
  this.city = $('input[name=city]');
  this.biography = $('textarea[name=biography]');
  this.completeForm = $('.complete-form');
  this.artistData = $('.artist-data');
  this.gender.find('option:contains(' + DataApp.currentUser.gender + ')').attr("selected", true);
  this.country.find('option:contains(' + DataApp.currentUser.country + ')').attr("selected", true);
  this.typeName = $('select[name=typeName]');

  var isArtist = DataApp.currentUser.isArtist ? 1 : 0;

  $('input[name=isArtist][value=' + isArtist + ']').attr('checked', true);
  for (var i = 0; i < interests.length; i++)
    $('input[type=checkbox][value=' + interests[i].id + ']').attr('checked', true);

  this.typeName.val(DataApp.currentUser.typeName);

  $("#date").mask("99/99/9999");
}


APP.AccountIndexScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  this.username.keyup(this.usernameKeyUpHandler.bind(this));
  this.completeForm.submit(this.completeFormHandler.bind(this));
  this.isArtist.change(this.isArtistHandler.bind(this));

  $('.btn-delete-force').click(this.deleteForceHandler.bind(this));
};

APP.AccountIndexScreen.prototype.deleteForceHandler = function(e) {
  e.preventDefault();
  var url = '/user/' + user.username + '/account/deactivate';
  this.requestHandler(url, {}, this.afterDeactivate);
};

APP.AccountConfigurationScreen.prototype.afterDeactivate = function(e) {
  this.showFlash('succes', 'Se ha desactivado tu cuenta');
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    window.location.href = '/';
  }, 1000);
};


APP.AccountIndexScreen.prototype.isArtistHandler = function(event) {
  var value = parseInt($(event.target).val(), 10);
  this.artistData[value === 0 ? 'hide' : 'show']();
};

APP.AccountIndexScreen.prototype.usernameKeyUpHandler = function(event) {
  if (!Validations.notBlank(this.username.val())) {
    clearTimeout(this.timeout);
    this.timeout = setTimeout(this.timeoutHandler.bind(this), 100);
  }
};

APP.AccountIndexScreen.prototype.timeoutHandler = function() {
  var payload = {
    property: 'username',
    value: this.username.val()
  };
  this.requestHandler('/auth/check', payload, this.checkUsernameComplete);
};

APP.AccountIndexScreen.prototype.checkUsernameComplete = function(response) {
  this.isUserAvailable = response.data.available;
};

APP.AccountIndexScreen.prototype.completeFormHandler = function(event) {
  event.preventDefault();

  var errors = [],
    scope = this;
  if (Validations.notBlank(this.firstname.val())) errors.push('Ingrese sus nombre');
  if (Validations.notBlank(this.lastname.val())) errors.push('Ingrese sus apellidos');
  if (Validations.notBlank(this.username.val())) errors.push('Ingrese su nombre de usuario');
  if (!Validations.username(this.username.val())) errors.push('Nombre de usuario solo acepta numeros y letras');
  if (Validations.notBlank(this.gender.val())) errors.push('Ingrese su genero');
  if (Validations.notBlank(this.birthday.val())) errors.push('Ingrese su cumpleaños');
  if (Validations.notBlank(this.country.val())) errors.push('Ingrese su pais');
  if (Validations.notBlank(this.city.val())) errors.push('Ingrese su ciudad');
  // if(Validations.notBlank(this.biography.val())) errors.push('Ingrese su biografia');

  if (this.typeName.val() === '2') {
    if (Validations.notBlank(this.pseudonimo.val())) errors.push('Ingrese su pseudonimo');
  }

  var interests = [];
  $('input[name=interests]:checked').each(function() {
    interests.push(parseInt($(this).val(), 10));
  });

  if (interests.length < 2) errors.push('Seleccione al menos 2 intereses');
  if (!this.isUserAvailable) errors.push('Usuario no disponible');

  if (errors.length > 0) return this.showFlash('error', errors);

  this.saveLoading.show();
  this.save.hide();

  var data = this.completeForm.serializeArray();
  $.each(data, function(index, value) {
    if (value.name === 'photo') {
      var filter = 'w_150,h_150,c_thumb,d_am_avatar.jpg';
      value.value = Utils.addImageFilter(scope.uploaderImage.photo, filter);
    }
    if (value.name === 'typeName') {
      value.value = parseInt(value.value, 10);
    }
  });
  var url = '/user/' + profile.username + '/account/update';
  this.requestHandler(url, data, this.afterSaveHandler);
}

APP.AccountIndexScreen.prototype.afterSaveHandler = function(response) {
  this.showFlash('succes', 'Se actualizo su perfil');
  this.saveLoading.hide();
  this.save.show();
  var user = response.data.user;
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    window.location.href = '/user/' + user.username;
  }, 1000);
}

APP.AccountIndexScreen.prototype.uploaderImageComplete = function(idImage) {
  this.$view.find('.upload').show();
  $('.cloudinary-fileupload').show();
  var filters = {
    width: 150,
    height: 150,
    crop: 'thumb'
  };
  $.cloudinary.image(idImage, filters).appendTo(this.$view.find('.preview'));
}

/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AccountPasswordScreen = function() {
  APP.BaseScreen.call(this, 'accountPassword');

  this.timeout = null;
  this.isUserAvailable = true;
};

APP.AccountPasswordScreen.constructor = APP.AccountPasswordScreen;
APP.AccountPasswordScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AccountPasswordScreen.prototype.setupUI = function() {
  this.uploaderImage = new APP.UploaderImage($('.uploader-profile'), this.uploaderImageComplete);
  this.uploaderImage.photo = DataApp.currentUser.photo;

  this.save = $('.save');
  this.saveLoading = $('.save-loading');
  this.password = $('.password');
  this.rePassword = $('.rePassword');
  this.form = $('.password-form');

  this.form.submit(this.formHandler.bind(this));
};

APP.AccountPasswordScreen.prototype.formHandler = function(event) {
  event.preventDefault();
  if (this.password.val() !== this.rePassword.val())
    return this.showFlash('error', 'Las contraseñas no coinciden');

  var url = '/user/' + profile.username + '/account/password';
  this.requestHandler(url, this.form.serialize(), this.changePasswordHandler);
};

APP.AccountPasswordScreen.prototype.changePasswordHandler = function(response) {
  this.showFlash('succes', 'Contraseña cambiada');
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AccountSellerScreen = function() {
  APP.BaseScreen.call(this, 'accountSeller');
};

APP.AccountSellerScreen.constructor = APP.AccountSellerScreen;
APP.AccountSellerScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AccountSellerScreen.prototype.setupUI = function() {
  this.saveBtn = $('.save-btn');

  this.country = $('select[name=country]');
  this.city = $('input[name=city]');
  this.province = $('input[name=province]');
  this.zipcode = $('input[name=zipcode]');
  this.direction = $('input[name=direction]');
  this.phone = $('input[name=phone]');
  this.paypal = $('input[name=paypal]');

  this.document = $('select[name=document]');
  this.documentValue = $('input[name=documentValue]');
  this.businessName = $('input[name=businessName]');
  this.bank = $('input[name=bank]');
  this.cci = $('input[name=cci]');

  this.form = $('.complete-form');

  this.country.find('option:contains(' + user.country + ')').attr('selected', true);
  this.city.val(user.city);
  this.document.find('option:contains(' + user.document + ')').attr('selected', true);

  this.terms = $('input[name=terms]');

  this.direction.geocomplete();

  this.deleteStoreBtn = $('.delete-store');

  this.createStoreBtn = $('.create-store-btn');
};

APP.AccountSellerScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.form.submit(this.submitHandler.bind(this));
  this.deleteStoreBtn.click(this.deleteStoreBtnHandler.bind(this));
  this.createStoreBtn.click(this.createStoreBtnHandler.bind(this));
  this.country.change(this.countryChangeHandler.bind(this));
};

APP.AccountSellerScreen.prototype.countryChangeHandler = function(e) {
  this.country.val() === 'Peru' ? $('.country-container').show() : $('.country-container').hide();
};

APP.AccountSellerScreen.prototype.createStoreBtnHandler = function(e) {
  e.preventDefault();

  $('#seller-invitation').hide();
  $('#seller-validation').show();
};

APP.AccountSellerScreen.prototype.deleteStoreBtnHandler = function(e) {
  var url = '/user/' + user.username + '/account/unseller';
  this.requestHandler(url, {}, this.afterUnSeller);
};

APP.AccountSellerScreen.prototype.afterUnSeller = function(e) {
  this.showFlash('succes', 'Se ha desactivado tu tienda');
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    window.location.href = '/user/' + user.username;
  }, 1000);
};

APP.AccountSellerScreen.prototype.submitHandler = function(e) {
  e.preventDefault();
  var errors = [],
    scope = this;

  if (Validations.notBlank(this.country.val())) errors.push('Seleccione su pais');
  if (Validations.notBlank(this.city.val())) errors.push('Seleccione su ciudad');

  if (Validations.notBlank(this.province.val())) errors.push('Ingrese una provincia');
  if (Validations.notBlank(this.zipcode.val())) errors.push('Ingrese el código postal');

  if (Validations.notBlank(this.direction.val())) errors.push('Ingrese su dirección');
  if (Validations.notBlank(this.phone.val())) errors.push('Ingrese su teléfono');

  if (this.country.val() === 'Peru') {
    if (Validations.notBlank(this.document.val())) errors.push('Seleccione un documento');
    if (Validations.notBlank(this.documentValue.val())) errors.push('Ingrese el nro del documento');
    if (Validations.notBlank(this.businessName.val())) errors.push('Ingrese el nombre de la razón social');
    if (Validations.notBlank(this.bank.val())) errors.push('Ingrese el nombre de tú banco');
    if (Validations.notBlank(this.cci.val())) errors.push('Ingrese tu número de cuenta');
  }

  if (!user.isSeller)
    if (!this.terms.prop('checked')) errors.push('Acepta los términos y condiciones');

  if (errors.length > 0) return this.showFlash('error', errors);

  var data = this.form.serializeArray();
  var url = '/user/' + user.username + '/account/seller';
  this.requestHandler(url, data, this.afterSaveHandler);
};

APP.AccountSellerScreen.prototype.afterSaveHandler = function(response) {
  this.showFlash('succes', 'Se actualizo tu información');

  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    if (!user.isSeller) {
      $('#go-share-modal').click();
    }
  }, 300);
}
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AddWorkScreen = function() {
  APP.BaseScreen.call(this, 'addWork');
  this.work = null;
};

APP.AddWorkScreen.constructor = APP.AddWorkScreen;
APP.AddWorkScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AddWorkScreen.prototype.setupUI = function() {
  this.workForm = $('.work-form');
  this.uploader = $('.uploader-work');
  this.name = $('input[name=name]');
  this.category = $('select[name=category]');
  this.description = $('textarea[name=description]');
  this.tags = $('input[name=tags]');
  this.tags.tagsInput({
    height: '50px',
    width: '100%',
    defaultText: '+Etiqueta'
  });

  this.send = $('.send');
  this.sendLoading = $('.send-loading');

  this.workDelete = $('.work-delete');
  this.workDeleteConfirm = $('.work-delete-confirm');
  this.workDeleteCancel = $('.work-delete-cancel');
  this.workDeleteForce = $('.work-delete-force');

  this.workPhotoPublished = $('.work-photo-published');
  this.workNamePublished = $('.work-name-published');
  this.workUserPublished = $('.work-user-published');
  this.workPublished = $('.work-published');
  this.workView = $('.work-view');
  this.workNew = $('.work-new');
  this.workEdit = $('.work-edit');

  this.uploaderImage = new APP.UploaderImage(this.uploader, this.imgComplete);
};

APP.AddWorkScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  this.workForm.submit(this.workFormSubmitHandler.bind(this));

  this.workDelete.click(this.deleteHandler.bind(this));
  this.workDeleteForce.click(this.workDeleteForceHandler.bind(this));
  this.workDeleteCancel.click(this.deleteCancel.bind(this));
  $('input[type=checkbox]').change(this.publicHandler);
};

APP.AddWorkScreen.prototype.publicHandler = function() {
  $(this).parent().find('.value').text((this.checked ? 'On' : 'Off'));
}

APP.AddWorkScreen.prototype.workFormSubmitHandler = function(event) {
  event.preventDefault();
  var errors = [],
    scope = this;
  if (!this.uploaderImage.photo) errors.push('Ingrese una foto');
  if (Validations.notBlank(this.name.val())) errors.push('Ingrese un nombre');
  if (Validations.notBlank(this.category.val())) errors.push('Ingrese una categoria');
  if (Validations.notBlank(this.description.val())) errors.push('Ingrese una descripcion');
  if (this.tags.val().split(',')[0].length < 1) errors.push('Ingrese etiquetas');

  if (errors.length > 0) return this.showFlash('error', errors);

  this.sendLoading.show();
  this.send.hide();

  var data = this.workForm.serializeArray();
  $.each(data, function(index, value) {
    if (value.name === 'photo')
      value.value = scope.uploaderImage.photo;

    if (value.name === 'nsfw' || value.name === 'public')
      value.value = (value.value === 'on');
  });

  var url = DataApp.currentUser.url + '/work/create';
  this.requestHandler(url, data, this.workCreatedComplete);
};

APP.AddWorkScreen.prototype.workCreatedComplete = function(response) {
  this.showFlash('succes', 'Su obra se subió exitosamente')
  this.work = response.data.work;

  this.workForm.hide();

  this.sendLoading.hide();
  this.send.show();

  var url = DataApp.currentUser.url + '/work/' + this.work.nameSlugify
  var photo = Utils.addImageFilter(this.work.photo, 'w_300,c_limit');

  this.workView.attr('href', url);
  this.workNew.attr('href', DataApp.currentUser.url + '/work/add');
  this.workEdit.attr('href', url + '/edit');
  this.workPhotoPublished.attr('src', photo);
  this.workNamePublished.text(this.work.name);
  this.workUserPublished.text(DataApp.currentUser.fullname);
  this.workPublished.show();
};

APP.AddWorkScreen.prototype.deleteHandler = function(event) {
  this.workDelete.hide();
  this.workDeleteConfirm.show();
};

APP.AddWorkScreen.prototype.workDeleteForceHandler = function() {
  var url = DataApp.currentUser.url + '/work/delete';
  this.requestHandler(url, {
    idWork: this.work.id
  }, this.forceComplete);
};

APP.AddWorkScreen.prototype.forceComplete = function() {
  this.showFlash('succes', 'Se elimino tu obra');
  setTimeout(function() {
    window.location.href = DataApp.currentUser.url;
  }, 1000);
};

APP.AddWorkScreen.prototype.deleteCancel = function(response) {
  this.workDelete.show();
  this.workDeleteConfirm.hide();
};

APP.AddWorkScreen.prototype.imgComplete = function(idImage) {
  this.$view.find('.upload').show();
  $('.cloudinary-fileupload').show();
  var filters = {
    width: 300,
    crop: 'limit'
  };
  $.cloudinary.image(idImage, filters).appendTo(this.$view.find('.preview'));
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminBlogScreen = function() {
  APP.BaseScreen.call(this, 'adminBlog');
};

APP.AdminBlogScreen.constructor = APP.AdminBlogScreen;
APP.AdminBlogScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminBlogScreen.prototype.setupUI = function() {
  this.searchBtn = $('.search-btn');
  this.start = $('.start');
  this.end = $('.end');

  this.startValue = null;
  this.endValue = null;

  this.term = null;

  if (Utils.getUrlParameter('start')) {
    var startParam = Utils.getUrlParameter('start');
    this.startValue = new Date(startParam);
    this.start.find('input').val(startParam.replace(/-/gi, '/'));
  }

  if (Utils.getUrlParameter('end')) {
    var endParam = Utils.getUrlParameter('end');
    this.endValue = new Date(endParam);
    this.end.find('input').val(endParam.replace(/-/gi, '/'));
  }

  this.viewer = new APP.Viewer('tableWork', $('.container-items'), 'infinite', data, {
    getTotal: function(total) {
      $('.total').text('(' + total + ')');
    }
  });

  this.searchBox = $('.search-box');
};

APP.AdminBlogScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.start.datepicker().on('changeDate', this.startDateChange.bind(this));
  this.end.datepicker().on('changeDate', this.endDateChange.bind(this));
  this.searchBtn.click(this.searchHander.bind(this));

  $(".dropdown-menu li a").click(this.dropdownChange.bind(this));

  if (Utils.getUrlParameter('term')) {
    this.term = Utils.getUrlParameter('term');
    $('.' + this.term).click();
  }

  if (Utils.getUrlParameter('termValue')) {
    this.searchBox.val(decodeURI(Utils.getUrlParameter('termValue')));
  }
};

APP.AdminBlogScreen.prototype.startDateChange = function(event) {
  this.startValue = event.date;
};

APP.AdminBlogScreen.prototype.endDateChange = function(event) {
  this.endValue = event.date;
};

APP.AdminBlogScreen.prototype.dropdownChange = function(event) {
  var text = $(event.target).text();

  $(".btn-drop .property").text(text);
  $(".btn-drop .property").val(text);

  switch (text) {
    case 'publicado':
      this.term = 'published';
      break;
  }
};
APP.AdminBlogScreen.prototype.searchHander = function() {
  var termValue = this.searchBox.val().trim();

  if (this.term && this.term.trim().length > 0) {

    if (this.term === 'featured') {
      if (termValue.length > 0 && isNaN(parseInt(termValue, 10)))
        return this.showFlash('error', ['El valor necesita ser 1 o 0']);
    }

    if (termValue.length > 0) {
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'term', this.term);
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'termValue', termValue);
    } else {
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');
    }
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');

    if (termValue.length > 0) {
      return this.showFlash('error', ['Necesitas seleccionar una propiedad']);
    }
  }

  if (this.startValue) {
    if (!this.endValue)
      return this.showFlash('error', ['Ingresa una fecha de fin']);

    var startStr = (this.startValue.getMonth() + 1) + "-" +
      this.startValue.getDate() + "-" +
      this.startValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'start', startStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'start');
  }

  if (this.endValue) {
    if (!this.startValue)
      return this.showFlash('error', ['Ingresa una fecha de inicio']);

    var endStr = (this.endValue.getMonth() + 1) + "-" +
      this.endValue.getDate() + "-" +
      this.endValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'end', endStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'end');
  }

  if (DataApp.currentUrl === window.location.href) return;

  Utils.changeUrl(this.id, DataApp.currentUrl);
  this.viewer.reset();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminEditBannerScreen = function() {
  APP.BaseScreen.call(this, 'adminEditBanner');
};

APP.AdminEditBannerScreen.constructor = APP.AdminEditBannerScreen;
APP.AdminEditBannerScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminEditBannerScreen.prototype.setupUI = function() {
  this.uploader = $('.uploader-image');
  this.uploaderImage = new APP.UploaderImage(this.uploader, this.imgComplete);
  this.sendBtn = $('.send-btn');

  this.uploaderImage.photo = banner.image;
};

APP.AdminEditBannerScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  this.sendBtn.click(this.sendHandler.bind(this));
};

APP.AdminEditBannerScreen.prototype.sendHandler = function(event) {
  event.preventDefault();
  var errors = [];
  if (Validations.notBlank($('input[name=link]').val())) errors.push('Ingrese un link');
  if (!this.uploaderImage.photo) errors.push('Ingrese una foto');
  if (errors.length > 0) return this.showFlash('error', errors);

  var scope = this;
  var data = $('form').serializeArray();
  $.each(data, function(index, value) {
    if (value.name === 'image')
      value.value = scope.uploaderImage.photo;
  });

  var url = '/report/banners/update';
  this.requestHandler(url, data, this.updateComplete);
};

APP.AdminEditBannerScreen.prototype.updateComplete = function(response) {
  this.showFlash('succes', 'Se edito el banner');

  setTimeout(function() {
    window.location.href = '/report/banners/';
  }, 1000);
};


APP.AdminEditBannerScreen.prototype.imgComplete = function(idImage) {
  this.$view.find('.upload').show();
  $('.cloudinary-fileupload').show();
  var filters = {
    width: 300,
    crop: 'limit'
  };
  $.cloudinary.image(idImage, filters).appendTo(this.$view.find('.preview'));
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminEditUserScreen = function() {
  APP.BaseScreen.call(this, 'adminEditUser');
};

APP.AdminEditUserScreen.constructor = APP.AdminEditUserScreen;
APP.AdminEditUserScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminEditUserScreen.prototype.setupUI = function() {
  this.amBtn = $('.am-btn');
  this.deleteBtn = $('.delete-btn');
  this.updateBtn = $('.update-btn');
};

APP.AdminEditUserScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.amBtn.click(this.amHandler.bind(this));
  this.deleteBtn.click(this.deleteHandler.bind(this));
  this.updateBtn.click(this.updateHandler.bind(this));
};

APP.AdminEditUserScreen.prototype.amHandler = function(event) {
  event.preventDefault();
  var url = '/user/' + userToEdit.username + '/' + (userToEdit.featured ? 'unfeatured' : 'featured');
  this.requestHandler(url, {
    idUser: userToEdit.id
  }, this.featuredComplete);
};

APP.AdminEditUserScreen.prototype.featuredComplete = function(response) {
  userToEdit = response.data.user;
  if (userToEdit.featured)
    this.amBtn.addClass('btn-primary').val('Recomendado');
  else
    this.amBtn.removeClass('btn-primary').val('Recomendar');

  this.showFlash('succes', 'Se actualizo el usuario');
};

APP.AdminEditUserScreen.prototype.deleteHandler = function(event) {
  event.preventDefault();
  var result = confirm("Quiero eliminar este usuario?");
  if (result) {
    var url = '/user/' + userToEdit.username + '/delete';
    this.requestHandler(url, {
      idUser: userToEdit.id
    }, this.deleteComplete);
  }
};

APP.AdminEditUserScreen.prototype.deleteComplete = function() {
  this.showFlash('succes', 'Se elimino el usuario');
  setTimeout(function() {
    window.location.href = '/report';
  }, 1000);
};

APP.AdminEditUserScreen.prototype.updateHandler = function(event) {
  event.preventDefault();
  var url = '/user/' + userToEdit.username + '/account/update';
  this.requestHandler(url, $('form').serialize(), this.updateComplete);
};

APP.AdminEditUserScreen.prototype.updateComplete = function(response) {
  this.showFlash('succes', 'Se actualizo el usuario');
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminGeneralScreen = function() {
  APP.BaseScreen.call(this, 'adminGeneral');
};

APP.AdminGeneralScreen.constructor = APP.AdminGeneralScreen;
APP.AdminGeneralScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminGeneralScreen.prototype.setupUI = function() {
  this.searchBtn = $('.search-btn');
  this.start = $('.start');
  this.end = $('.end');

  this.startValue = null;
  this.endValue = null;

  if (Utils.getUrlParameter('start')) {
    var startParam = Utils.getUrlParameter('start');
    this.startValue = new Date(startParam);
    this.start.find('input').val(startParam.replace(/-/gi, '/'));
  }

  if (Utils.getUrlParameter('end')) {
    var endParam = Utils.getUrlParameter('end');
    this.endValue = new Date(endParam);
    this.end.find('input').val(endParam.replace(/-/gi, '/'));
  }
};

APP.AdminGeneralScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.start.datepicker().on('changeDate', this.startDateChange.bind(this));
  this.end.datepicker().on('changeDate', this.endDateChange.bind(this));
  this.searchBtn.click(this.searchHander.bind(this));
};

APP.AdminGeneralScreen.prototype.startDateChange = function(event) {
  this.startValue = event.date;
};

APP.AdminGeneralScreen.prototype.endDateChange = function(event) {
  this.endValue = event.date;
};

APP.AdminGeneralScreen.prototype.searchHander = function() {
  if (this.startValue) {
    if (!this.endValue)
      return this.showFlash('error', ['Ingresa una fecha de fin']);

    var startStr = (this.startValue.getMonth() + 1) + "-" +
      this.startValue.getDate() + "-" +
      this.startValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'start', startStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'start');
  }

  if (this.endValue) {
    if (!this.startValue)
      return this.showFlash('error', ['Ingresa una fecha de inicio']);

    var endStr = (this.endValue.getMonth() + 1) + "-" +
      this.endValue.getDate() + "-" +
      this.endValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'end', endStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'end');
  }

  if (DataApp.currentUrl !== window.location.href)
    window.location.href = DataApp.currentUrl;
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminProductRevisionScreen = function() {
  APP.BaseScreen.call(this, 'adminEditBanner');
};

APP.AdminProductRevisionScreen.constructor = APP.AdminProductRevisionScreen;
APP.AdminProductRevisionScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminProductRevisionScreen.prototype.setupUI = function() {
  this.deniedBtn = $('.btn-denied');
  this.acceptedBtn = $('.btn-accepted');

  this.reason = $('select[name=reason]');
  this.message = $('textarea[name=message]');

  this.deniedForm = $('.denied-form');
};

APP.AdminProductRevisionScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.deniedBtn.click(this.deniedHandler.bind(this));
  this.acceptedBtn.click(this.acceptedHandler.bind(this));
  this.deniedForm.submit(this.deniedFormSubmit.bind(this));
};

APP.AdminProductRevisionScreen.prototype.deniedFormSubmit = function(e) {
  e.preventDefault();

  var errors = [],
    scope = this;
  if (Validations.notBlank(this.reason.val())) errors.push('Ingrese un motivo');
  if (Validations.notBlank(this.message.val())) errors.push('Ingrese un mensaje');
  if (errors.length > 0) return this.showFlash('error', errors);

  var data = {
    idProduct: product.id,
    published: false,
    reason: this.reason.val(),
    message: this.message.val()
  };
  var url = '/report/products/update';
  this.requestHandler(url, data, this.productUpdateComplete);
};

APP.AdminProductRevisionScreen.prototype.productUpdateComplete = function(response) {
  this.showFlash('succes', 'Se respondio la solicitud del producto');
  setTimeout(function() {
    window.location.href = '/report/products_applying/page-1';
  }, 1000);
};

APP.AdminProductRevisionScreen.prototype.deniedHandler = function(e) {
  e.preventDefault();
  $('.form-container').removeClass('hide');
};

APP.AdminProductRevisionScreen.prototype.acceptedHandler = function(e) {
  e.preventDefault();
  var data = {
    idProduct: product.id,
    published: true
  };
  var url = '/report/products/update';
  this.requestHandler(url, data, this.productUpdateComplete);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminProductsApplyingScreen = function() {
  APP.BaseScreen.call(this, 'adminProductsApplying');
};

APP.AdminProductsApplyingScreen.constructor = APP.AdminProductsApplyingScreen;
APP.AdminProductsApplyingScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminProductsApplyingScreen.prototype.setupUI = function() {
  this.searchBtn = $('.search-btn');
  this.start = $('.start');
  this.end = $('.end');

  this.startValue = null;
  this.endValue = null;

  if (Utils.getUrlParameter('start')) {
    var startParam = Utils.getUrlParameter('start');
    this.startValue = new Date(startParam);
    this.start.find('input').val(startParam.replace(/-/gi, '/'));
  }

  if (Utils.getUrlParameter('end')) {
    var endParam = Utils.getUrlParameter('end');
    this.endValue = new Date(endParam);
    this.end.find('input').val(endParam.replace(/-/gi, '/'));
  }

  this.viewer = new APP.Viewer('tableProductApplying', $('.container-items'), 'infinite', data, {
    getTotal: function(total) {
      $('.total').text('(' + total + ')');
    }
  });

  this.searchBox = $('.search-box');
};

APP.AdminProductsApplyingScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.start.datepicker().on('changeDate', this.startDateChange.bind(this));
  this.end.datepicker().on('changeDate', this.endDateChange.bind(this));
  this.searchBtn.click(this.searchHander.bind(this));
};

APP.AdminProductsApplyingScreen.prototype.startDateChange = function(event) {
  this.startValue = event.date;
};

APP.AdminProductsApplyingScreen.prototype.endDateChange = function(event) {
  this.endValue = event.date;
};

APP.AdminProductsApplyingScreen.prototype.searchHander = function() {
  if (this.startValue) {
    if (!this.endValue)
      return this.showFlash('error', ['Ingresa una fecha de fin']);

    var startStr = (this.startValue.getMonth() + 1) + "-" +
      this.startValue.getDate() + "-" +
      this.startValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'start', startStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'start');
  }

  if (this.endValue) {
    if (!this.startValue)
      return this.showFlash('error', ['Ingresa una fecha de inicio']);

    var endStr = (this.endValue.getMonth() + 1) + "-" +
      this.endValue.getDate() + "-" +
      this.endValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'end', endStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'end');
  }

  if (DataApp.currentUrl === window.location.href) return;

  Utils.changeUrl(this.id, DataApp.currentUrl);
  this.viewer.reset();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminProductsScreen = function() {
  APP.BaseScreen.call(this, 'adminProducts');
};

APP.AdminProductsScreen.constructor = APP.AdminProductsScreen;
APP.AdminProductsScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminProductsScreen.prototype.setupUI = function() {
  this.searchBtn = $('.search-btn');
  this.start = $('.start');
  this.end = $('.end');

  this.startValue = null;
  this.endValue = null;

  this.term = null;

  if (Utils.getUrlParameter('start')) {
    var startParam = Utils.getUrlParameter('start');
    this.startValue = new Date(startParam);
    this.start.find('input').val(startParam.replace(/-/gi, '/'));
  }

  if (Utils.getUrlParameter('end')) {
    var endParam = Utils.getUrlParameter('end');
    this.endValue = new Date(endParam);
    this.end.find('input').val(endParam.replace(/-/gi, '/'));
  }

  this.viewer = new APP.Viewer('tableProduct', $('.container-items'), 'infinite', data, {
    getTotal: function(total) {
      $('.total').text('(' + total + ')');
    }
  });

  this.searchBox = $('.search-box');
};

APP.AdminProductsScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.start.datepicker().on('changeDate', this.startDateChange.bind(this));
  this.end.datepicker().on('changeDate', this.endDateChange.bind(this));
  this.searchBtn.click(this.searchHander.bind(this));

  $(".dropdown-menu li a").click(this.dropdownChange.bind(this));

  if (Utils.getUrlParameter('term')) {
    this.term = Utils.getUrlParameter('term');
    $('.' + this.term).click();
  }

  if (Utils.getUrlParameter('termValue')) {
    this.searchBox.val(decodeURI(Utils.getUrlParameter('termValue')));
  }
};

APP.AdminProductsScreen.prototype.startDateChange = function(event) {
  this.startValue = event.date;
};

APP.AdminProductsScreen.prototype.endDateChange = function(event) {
  this.endValue = event.date;
};

APP.AdminProductsScreen.prototype.dropdownChange = function(event) {
  var text = $(event.target).text();

  $(".btn-drop .property").text(text);
  $(".btn-drop .property").val(text);

  switch (text) {
    case 'nombre':
      this.term = 'name';
      break;
    case 'recomendado':
      this.term = 'featured';
      break;
  }
};
APP.AdminProductsScreen.prototype.searchHander = function() {
  var termValue = this.searchBox.val().trim();

  if (this.term && this.term.trim().length > 0) {

    if (this.term === 'featured') {
      if (termValue.length > 0 && isNaN(parseInt(termValue, 10)))
        return this.showFlash('error', ['El valor necesita ser 1 o 0']);
    }

    if (termValue.length > 0) {
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'term', this.term);
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'termValue', termValue);
    } else {
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');
    }
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');

    if (termValue.length > 0) {
      return this.showFlash('error', ['Necesitas seleccionar una propiedad']);
    }
  }

  if (this.startValue) {
    if (!this.endValue)
      return this.showFlash('error', ['Ingresa una fecha de fin']);

    var startStr = (this.startValue.getMonth() + 1) + "-" +
      this.startValue.getDate() + "-" +
      this.startValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'start', startStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'start');
  }

  if (this.endValue) {
    if (!this.startValue)
      return this.showFlash('error', ['Ingresa una fecha de inicio']);

    var endStr = (this.endValue.getMonth() + 1) + "-" +
      this.endValue.getDate() + "-" +
      this.endValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'end', endStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'end');
  }

  if (DataApp.currentUrl === window.location.href) return;

  Utils.changeUrl(this.id, DataApp.currentUrl);
  this.viewer.reset();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminUsersScreen = function() {
  APP.BaseScreen.call(this, 'adminUsers');
};

APP.AdminUsersScreen.constructor = APP.AdminUsersScreen;
APP.AdminUsersScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminUsersScreen.prototype.setupUI = function() {
  this.searchBtn = $('.search-btn');
  this.start = $('.start');
  this.end = $('.end');

  this.startValue = null;
  this.endValue = null;

  this.term = null;

  if (Utils.getUrlParameter('start')) {
    var startParam = Utils.getUrlParameter('start');
    this.startValue = new Date(startParam);
    this.start.find('input').val(startParam.replace(/-/gi, '/'));
  }

  if (Utils.getUrlParameter('end')) {
    var endParam = Utils.getUrlParameter('end');
    this.endValue = new Date(endParam);
    this.end.find('input').val(endParam.replace(/-/gi, '/'));
  }

  this.viewer = new APP.Viewer('tableUser', $('.container-items'), 'infinite', data, {
    getTotal: function(total) {
      $('.total').text('(' + total + ')');
    }
  });

  this.searchBox = $('.search-box');
};

APP.AdminUsersScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.start.datepicker().on('changeDate', this.startDateChange.bind(this));
  this.end.datepicker().on('changeDate', this.endDateChange.bind(this));
  this.searchBtn.click(this.searchHander.bind(this));

  $(".dropdown-menu li a").click(this.dropdownChange.bind(this));

  if (Utils.getUrlParameter('term')) {
    this.term = Utils.getUrlParameter('term');
    $('.' + this.term).click();
  }

  if (Utils.getUrlParameter('termValue')) {
    this.searchBox.val(decodeURI(Utils.getUrlParameter('termValue')));
  }
};

APP.AdminUsersScreen.prototype.startDateChange = function(event) {
  this.startValue = event.date;
};

APP.AdminUsersScreen.prototype.endDateChange = function(event) {
  this.endValue = event.date;
};

APP.AdminUsersScreen.prototype.dropdownChange = function(event) {
  var text = $(event.target).text();

  $(".btn-drop .property").text(text);
  $(".btn-drop .property").val(text);

  switch (text) {
    case 'username':
      this.term = 'username';
      break;
    case 'email':
      this.term = 'email';
      break;
    case 'ciudad':
      this.term = 'city';
      break;
    case 'pais':
      this.term = 'country';
      break;
    case 'artista':
      this.term = 'isArtist';
      break;
    case 'verificado':
      this.term = 'verified';
      break;
    case 'completo':
      this.term = 'filled';
      break;
    case 'recomendado':
      this.term = 'featured';
      break;
  }
};
APP.AdminUsersScreen.prototype.searchHander = function() {
  var termValue = this.searchBox.val().trim();

  if (this.term && this.term.trim().length > 0) {

    if (this.term === 'isArtist' || this.term === 'verified' || this.term === 'filled') {
      if (isNaN(parseInt(termValue, 10)))
        return this.showFlash('error', ['El valor necesita ser 1 o 0']);
    }

    if (termValue.length > 0) {
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'term', this.term);
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'termValue', termValue);
    } else {
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');
    }
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');

    if (termValue.length > 0) {
      return this.showFlash('error', ['Necesitas seleccionar una propiedad']);
    }
  }

  if (this.startValue) {
    if (!this.endValue)
      return this.showFlash('error', ['Ingresa una fecha de fin']);

    var startStr = (this.startValue.getMonth() + 1) + "-" +
      this.startValue.getDate() + "-" +
      this.startValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'start', startStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'start');
  }

  if (this.endValue) {
    if (!this.startValue)
      return this.showFlash('error', ['Ingresa una fecha de inicio']);

    var endStr = (this.endValue.getMonth() + 1) + "-" +
      this.endValue.getDate() + "-" +
      this.endValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'end', endStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'end');
  }

  if (DataApp.currentUrl === window.location.href) return;

  Utils.changeUrl(this.id, DataApp.currentUrl);
  this.viewer.reset();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AdminWorksScreen = function() {
  APP.BaseScreen.call(this, 'adminWorks');
};

APP.AdminWorksScreen.constructor = APP.AdminWorksScreen;
APP.AdminWorksScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AdminWorksScreen.prototype.setupUI = function() {
  this.searchBtn = $('.search-btn');
  this.start = $('.start');
  this.end = $('.end');

  this.startValue = null;
  this.endValue = null;

  this.term = null;

  if (Utils.getUrlParameter('start')) {
    var startParam = Utils.getUrlParameter('start');
    this.startValue = new Date(startParam);
    this.start.find('input').val(startParam.replace(/-/gi, '/'));
  }

  if (Utils.getUrlParameter('end')) {
    var endParam = Utils.getUrlParameter('end');
    this.endValue = new Date(endParam);
    this.end.find('input').val(endParam.replace(/-/gi, '/'));
  }

  this.viewer = new APP.Viewer('tableWork', $('.container-items'), 'infinite', data, {
    getTotal: function(total) {
      $('.total').text('(' + total + ')');
    }
  });

  this.searchBox = $('.search-box');
};

APP.AdminWorksScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.start.datepicker().on('changeDate', this.startDateChange.bind(this));
  this.end.datepicker().on('changeDate', this.endDateChange.bind(this));
  this.searchBtn.click(this.searchHander.bind(this));

  $(".dropdown-menu li a").click(this.dropdownChange.bind(this));

  if (Utils.getUrlParameter('term')) {
    this.term = Utils.getUrlParameter('term');
    $('.' + this.term).click();
  }

  if (Utils.getUrlParameter('termValue')) {
    this.searchBox.val(decodeURI(Utils.getUrlParameter('termValue')));
  }
};

APP.AdminWorksScreen.prototype.startDateChange = function(event) {
  this.startValue = event.date;
};

APP.AdminWorksScreen.prototype.endDateChange = function(event) {
  this.endValue = event.date;
};

APP.AdminWorksScreen.prototype.dropdownChange = function(event) {
  var text = $(event.target).text();

  $(".btn-drop .property").text(text);
  $(".btn-drop .property").val(text);

  switch (text) {
    case 'nombre':
      this.term = 'name';
      break;
    case 'recomendado':
      this.term = 'featured';
      break;
  }
};
APP.AdminWorksScreen.prototype.searchHander = function() {
  var termValue = this.searchBox.val().trim();

  if (this.term && this.term.trim().length > 0) {

    if (this.term === 'featured') {
      if (termValue.length > 0 && isNaN(parseInt(termValue, 10)))
        return this.showFlash('error', ['El valor necesita ser 1 o 0']);
    }

    if (termValue.length > 0) {
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'term', this.term);
      DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'termValue', termValue);
    } else {
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
      DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');
    }
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'term');
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'termValue');

    if (termValue.length > 0) {
      return this.showFlash('error', ['Necesitas seleccionar una propiedad']);
    }
  }

  if (this.startValue) {
    if (!this.endValue)
      return this.showFlash('error', ['Ingresa una fecha de fin']);

    var startStr = (this.startValue.getMonth() + 1) + "-" +
      this.startValue.getDate() + "-" +
      this.startValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'start', startStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'start');
  }

  if (this.endValue) {
    if (!this.startValue)
      return this.showFlash('error', ['Ingresa una fecha de inicio']);

    var endStr = (this.endValue.getMonth() + 1) + "-" +
      this.endValue.getDate() + "-" +
      this.endValue.getFullYear();

    DataApp.currentUrl = Utils.updateQueryStringParameter(DataApp.currentUrl, 'end', endStr);
  } else {
    DataApp.currentUrl = Utils.removeURLParameter(DataApp.currentUrl, 'end');
  }

  if (DataApp.currentUrl === window.location.href) return;

  Utils.changeUrl(this.id, DataApp.currentUrl);
  this.viewer.reset();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.AuthScreen = function(meta) {
  this.meta = meta;

  APP.BaseScreen.call(this, 'auth');

  console.log(Cookies.get('return_to'));
};

APP.AuthScreen.constructor = APP.AuthScreen;
APP.AuthScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.AuthScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  $('.fb').click(this.fbHandler.bind(this));
  $('.auth-form').submit(this.formHandler.bind(this));
};

APP.AuthScreen.prototype.fbHandler = function() {
  $('.fb').hide();
  $('.fb-loading').show();
};

APP.AuthScreen.prototype.formHandler = function(event) {
  event.preventDefault();
  $('.submit').hide();
  $('.submit-loading').show();

  var url = '/auth/' + this.meta,
    payload = $('.auth-form').serialize();
  this.requestHandler(url, payload, this.requestAuthComplete, this.requestAuthError, true);
};

APP.AuthScreen.prototype.requestAuthError = function(response) {
  this.meta === 'signup' && grecaptcha.reset();
  $('.submit').show();
  $('.submit-loading').hide();
};

APP.AuthScreen.prototype.requestAuthComplete = function(response) {
  $('.submit').show();
  $('.submit-loading').hide();

  if (this.meta === 'reset') {
    this.showFlash('succes', 'Contraseña cambiada');
    var timeout = setTimeout(function() {
      clearTimeout(timeout);
      return location.href = '/auth/login';
    }, 1000);
  } else if (this.meta === 'forgot') {
    this.showFlash('succes', 'Se envio el correo');
  } else {
    return location.href = response.data.returnTo;
  }
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.BlogScreen = function() {
  APP.BaseScreen.call(this, 'blog');
};

APP.BlogScreen.constructor = APP.BlogScreen;
APP.BlogScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.BlogScreen.prototype.setupUI = function() {
  this.viewer = new APP.Viewer('post', $('.articles-container'), 'infinite', posts);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

var normal = (function() {
  var from = "ÃÀÁÄÂÈÉËÊÌÍÏÎÒÓÖÔÙÚÜÛãàáäâèéëêìíïîòóöôùúüûÑñÇç",
    to = "AAAAAEEEEIIIIOOOOUUUUaaaaaeeeeiiiioooouuuunncc",
    mapping = {};

  for (var i = 0, j = from.length; i < j; i++)
    mapping[from.charAt(i)] = to.charAt(i);

  return function(str) {
    var ret = [];
    for (var i = 0, j = str.length; i < j; i++) {
      var c = str.charAt(i);
      if (mapping.hasOwnProperty(str.charAt(i)))
        ret.push(mapping[c]);
      else
        ret.push(c);
    }
    return ret.join('');
  }
})();

APP.BuyScreen = function() {
  this.productConfig = JSON.parse(product.config);
  APP.BaseScreen.call(this, 'buy');
  this.totalShipping;
  this.currentIgv;
  this.totalPrice;
};

APP.BuyScreen.constructor = APP.BuyScreen;
APP.BuyScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.BuyScreen.prototype.setupUI = function() {
  this.payBtn = $('.btn-pay');
  this.form = $('form[name=buy-form]');
};

APP.BuyScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  $('select[name=city]').change(this.cityChangeHandler.bind(this));
  $('select[name=city]').change();
  this.form.submit(this.submitHandler.bind(this));

  $('input[name=direction]').geocomplete();
};

APP.BuyScreen.prototype.submitHandler = function(e) {
  var firstname = $('input[name=firstname]').val();
  var lastname = $('input[name=lastname]').val();
  var direction = $('input[name=direction]').val();
  var departament = $('input[name=departament]').val();
  var city = $('select[name=city]').val();
  var province = $('input[name=province]').val();
  var zipcode = $('input[name=zipcode]').val();
  var country = $('select[name=country]').val();
  var phone = $('input[name=phone]').val();
  var email = $('input[name=email]').val();

  var errors = [];

  if (Validations.notBlank(firstname)) errors.push('Ingrese un nombre');
  if (Validations.notBlank(lastname)) errors.push('Ingrese tus apellidos');
  if (Validations.notBlank(direction)) errors.push('Ingrese una dirección');

  if (Validations.notBlank(city)) errors.push('Ingrese tú ciudad');
  if (Validations.notBlank(province)) errors.push('Ingrese tú provincia');
  if (Validations.notBlank(zipcode)) errors.push('Ingrese el código postal');
  if (Validations.notBlank(phone)) errors.push('Ingrese tú telefono');
  if (Validations.notBlank(email)) errors.push('Ingrese tú correo');

  if (errors.length > 0) return this.showFlash('error', errors);

  var data = {
    firstname: firstname,
    lastname: lastname,
    direction: direction,
    departament: departament,
    city: city,
    province: province,
    zipcode: zipcode,
    country: country,
    phone: phone,
    email: email,
  }

  $('<input type="hidden" name="data" value=' + JSON.stringify(data) + '>')
    .appendTo(this.form);

  $('<input type="hidden" name="shipping" value=' + this.totalShipping + '>')
    .appendTo(this.form);

  $('<input type="hidden" name="price" value=' + this.totalPrice + '>')
    .appendTo(this.form);

  data.shipping = this.totalShipping;
  data.price = this.price;

  Cookies.set('order_data', JSON.stringify(data), {
    maxAge: 3600000,
    domain: '.' + document.domain
  });
};

APP.BuyScreen.prototype.cityChangeHandler = function() {
  var name = normal($('select[name=city]').val());
  var url = '/user/' + product.User.username + '/product/shipping';
  if (name === 'Pucallpa') name = 'PUCALLPA (CALLERIA)';
  if (name === 'Chincha') name = 'CHINCHA ALTA';

  var payload = {
    "nom_destino": name.toUpperCase(),
    "peso": this.productConfig.pkgWeight,
    "servicio": "Atencion en Oficina",
    "options2": "Kilos",
    "largo": this.productConfig.pkgLarge,
    "ancho": this.productConfig.pkgWidth,
    "alto": this.productConfig.pkgHeight,
    "cantidad": 1,
    "m_largo": "cms",
    "m_ancho": "cms",
    "m_alto": "cms"
  }
  this.requestHandler(url, {
    config: JSON.stringify(payload)
  }, this.shippingHandler);
};

APP.BuyScreen.prototype.shippingHandler = function(response) {
  var data = response.data.data;

  this.totalShipping = Number(data.monto_total) + (6 / 100 * Number(data.monto_total));
  this.totalPrice = Number(product.finalPrice) + this.totalShipping;

  $('.subtotal').text(product.finalPrice);
  $('.baseprice').text(this.totalShipping);
  $('.totallity').text(this.totalPrice);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.CollectionScreen = function() {
  APP.BaseScreen.call(this, 'collection');
};

APP.CollectionScreen.constructor = APP.CollectionScreen;
APP.CollectionScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.CollectionScreen.prototype.setupUI = function() {
  this.viewer = null;
  if (collection.meta === 'works') {
    this.viewer = new APP.Viewer('work', $('.grid'), null, items, {
      context: 'single-collection'
    });
  } else {
    this.viewer = new APP.Viewer('product', $('.grid'), null, items, {
      context: 'single-collection'
    });
  }

  this.workDelete = $('.work-delete');
  this.workDeleteConfirm = $('.work-delete-confirm');
  this.workDeleteCancel = $('.work-delete-cancel');
  this.workDeleteForce = $('.work-delete-force');
  this.collectionForm = $('.collection-form');
  this.collectionName = $('.collection-name');
  this.collectionDescription = $('.collection-description');
  this.save = $('.save');
  this.saveLoading = $('.save-loading');
  this.public = $('input[name=public]');
  $('#go-collection-modal').leanModal();
};

APP.CollectionScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.workDelete.click(this.workDeleteHandler.bind(this));
  this.workDeleteForce.click(this.workDeleteForceHandler.bind(this));
  this.workDeleteCancel.click(this.workDeleteCancelHandler.bind(this));
  this.save.click(this.saveHandler.bind(this));
  this.collectionForm.submit(this.collectionFormHandler.bind(this));
  this.public.change(this.publicChangeHandler);
  this.public.change();
};

APP.CollectionScreen.prototype.saveHandler = function() {
  this.collectionForm.submit();
};

APP.CollectionScreen.prototype.publicChangeHandler = function() {
  $(this).parent().find('.value').text((this.checked ? 'On' : 'Off'));
}

APP.CollectionScreen.prototype.collectionFormHandler = function(event) {
  event.preventDefault();
  this.save.hide();
  this.saveLoading.show();

  var url = DataApp.currentUser.url + '/collection/update';
  var payload = {
    name: $('input[name=name]').val(),
    description: $('textarea[name=description]').val(),
    public: $('input[name=public]:checked').val() !== undefined,
    idCollection: collection.id
  }
  this.requestHandler(url, payload, this.collectionUpdateComplete);
};

APP.CollectionScreen.prototype.collectionUpdateComplete = function(response) {
  this.save.show();
  this.saveLoading.hide();

  var newCollection = response.data.collection;
  var newUrl = '/user/' + collection.User.username + '/collection/' + newCollection.nameSlugify;
  this.collectionName.text(newCollection.name);
  this.collectionDescription.text(newCollection.description);
  $('#lean_overlay').trigger('click');
  this.showFlash('succes', 'Se actualizo tu coleccion');
  Utils.changeUrl(collection.name, newUrl);
}

APP.CollectionScreen.prototype.workDeleteCancelHandler = function() {
  this.workDelete.show();
  this.workDeleteConfirm.hide();
};

APP.CollectionScreen.prototype.workDeleteHandler = function() {
  this.workDelete.hide();
  this.workDeleteConfirm.show();
};

APP.CollectionScreen.prototype.workDeleteForceHandler = function() {
  var url = DataApp.currentUser.url + '/collection/delete';
  this.requestHandler(url, {
    idCollection: collection.id
  }, this.collectionDeleteComplete);
};

APP.CollectionScreen.prototype.collectionDeleteComplete = function() {
  $('#lean_overlay').trigger('click');
  this.showFlash('succes', 'Se elimino tu coleccion');
  setTimeout(function() {
    window.location.href = '/user/' + collection.User.username + '/collections';
  }, 1000);
}
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.ConfirmEmailScreen = function() {
  APP.BaseScreen.call(this, 'confirmEmail');
};

APP.ConfirmEmailScreen.constructor = APP.ConfirmEmailScreen;
APP.ConfirmEmailScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.ConfirmEmailScreen.prototype.setupUI = function() {
  this.messageSuccess = $('.msg-succes');
  this.resend = $('.resend-btn');
  this.resendLoading = $('.resend-loading');
};

APP.ConfirmEmailScreen.prototype.listeners = function() {
  this.resend.click(this.resendHandler.bind(this));
};

APP.ConfirmEmailScreen.prototype.resendHandler = function() {
  this.messageSuccess.hide();
  this.resendLoading.show();
  this.resend.hide();

  this.requestHandler('/auth/resend', {}, this.resendComplete);
};

APP.ConfirmEmailScreen.prototype.resendComplete = function(response) {
  this.messageSuccess.show();
  this.resendLoading.hide();
  this.resend.show();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};
var scope;
var timeout;

APP.CreatorPostScreen = function() {
  APP.BaseScreen.call(this, 'creatorPost');
  scope = this;
};

APP.CreatorPostScreen.constructor = APP.CreatorPostScreen;
APP.CreatorPostScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.CreatorPostScreen.prototype.setupUI = function() {
  this.category = $('select[name=category]');
  this.name = $('input[name=name]');
  this.status = $('.status');
  this.delete = $('.delete-btn');
  this.deleteConfirm = $('.delete-confirm');
  this.deleteForce = $('.delete-force');
  this.cancel = $('.cancel');

  this.previewBtn = $('.preview-btn');
  this.publishBtn = $('.publish-btn');
  this.amBtn = $('.am-btn');

  this.cover = new APP.UploaderImage($('.uploader-cover'), this.coverComplete, {
    uploader: $('.editor-cover')
  });

  if (edit) {
    this.category.find('option[value=' + post.Category.id + ']').attr('selected', true);
    this.cover.photo = post.photo;
  }

  this.editable = $('.editable');

  this.editor = new MediumEditor('.editable', {
    buttonLabels: 'fontawesome',
    targetBlank: true,
    imageDragging: false,
    placeholder: {
      text: 'Ingresa el contenido del post :)',
    },
    toolbar: {
      buttons: [
        'h2', 'h3', 'bold', 'italic', 'quote', 'anchor',
        'justifyLeft', 'justifyCenter', 'justifyRight'
      ]
    }
  });

  this.editable.mediumInsert({
    editor: this.editor,
    addons: {
      embeds: {
        placeholder: 'Inserta el código de embebido de youtube y luego presiona enter'
      }
    }
  });

  this.isUploading = false;
};

APP.CreatorPostScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  Broadcaster.addEventListener('imageStarted', this.imageStarted.bind(this));
  Broadcaster.addEventListener('imageProgressComplete', this.progressComplete.bind(this));
  Broadcaster.addEventListener('imageLoaded', this.imageLoaded.bind(this));

  var throttledAutoSave = MediumEditor.util.throttle(this.autoSave.bind(this), 2000);
  this.editor.subscribe('editableInput', throttledAutoSave);

  window.onbeforeunload = this.beforeUnLoad.bind(this);

  this.category.change(this.inputChange.bind(this));
  this.name.keyup(this.nameKeyUp.bind(this));

  this.delete.click(this.deleteHandler.bind(this));
  this.cancel.click(this.cancelHandler.bind(this));
  this.deleteForce.click(this.deleteForceHandler.bind(this));

  this.publishBtn.click(this.publishHandler.bind(this));
  this.amBtn.click(this.featuredHandler.bind(this));
};

APP.CreatorPostScreen.prototype.publishHandler = function() {
  if (!post) return this.showFlash('error', ['Rellena todos los campos del post']);
  var url = '/blog/post/' + (post.published ? 'unpublish' : 'publish');
  this.requestHandler(url, {
    idPost: post.id
  }, this.publishComplete);
};

APP.CreatorPostScreen.prototype.publishComplete = function(response) {
  post = response.data.post;
  if (post.published)
    this.publishBtn.addClass('publish').text('PUBLICADO');
  else
    this.publishBtn.removeClass('publish').text('PUBLICAR');
};

APP.CreatorPostScreen.prototype.featuredHandler = function() {
  if (!post) return this.showFlash('error', ['Rellena todos los campos del post']);
  var url = '/blog/post/' + (post.featured ? 'unfeatured' : 'featured');
  this.requestHandler(url, {
    idPost: post.id
  }, this.featuredComplete);
};

APP.CreatorPostScreen.prototype.featuredComplete = function(response) {
  post = response.data.post;
  if (post.featured)
    this.amBtn.addClass('am');
  else
    this.amBtn.removeClass('am');
};

APP.CreatorPostScreen.prototype.imageStarted = function() {
  this.isUploading = true;
  this.status.text('Cargando imagenes....');
};

APP.CreatorPostScreen.prototype.progressComplete = function() {
  this.status.text('Procesando imagenes....');
};

APP.CreatorPostScreen.prototype.imageLoaded = function() {
  this.isUploading = false;
  this.autoSave(null, this.editable);
  this.status.text('Imagenes cargadas');
};

APP.CreatorPostScreen.prototype.autoSave = function(event, editable) {
  if (this.isUploading) return this.showFlash('error', ['Las imágenes aún se estan cargando']);
  var errors = [];
  var nameValue = this.name.val(),
    categoryValue = this.category.val();

  this.editable = editable;

  if (nameValue.trim().length < 1)
    errors.push('Agrega un titulo');

  if (categoryValue === null)
    errors.push('Selecciona una categoria');

  if (this.cover.photo === null)
    errors.push('Selecciona una imagen de cover');

  if (errors.length > 0) return this.showFlash('error', errors);

  var body = this.editor.serialize()['element-0']['value'];

  editable = $(editable);

  var payload = {
    body: body,
    name: nameValue,
    category: categoryValue,
    description: editable.find('p').text().substr(0, 180),
    photo: this.cover.photo
  };

  this.status.text('Guardando.....');

  var url;
  if (!post) {
    url = '/blog/post/create';
  } else {
    url = '/blog/post/update';
    payload.idPost = post.id;
  }

  this.requestHandler(url, payload, this.saveRequestComplete);
};


APP.CreatorPostScreen.prototype.saveRequestComplete = function(response) {
  post = response.data.post;
  var url = '/blog/post/' + post.nameSlugify;
  if (edit)
    Utils.changeUrl(post.name, url + '/edit');
  this.previewBtn.attr('href', url);
  this.status.text('✓ guardado');
};

APP.CreatorPostScreen.prototype.beforeUnLoad = function(event) {
  if (this.isUploading) {
    var message = 'Aun no se han guardado tus cambios!';
    if (typeof event == 'undefined') {
      event = window.event;
    }
    if (event) {
      event.returnValue = message;
    }
    return message;
  }
};

APP.CreatorPostScreen.prototype.coverComplete = function(idImage) {
  this.$view.find('.upload').show();
  $('.cloudinary-fileupload').show();

  var filters = {
    format: 'jpg',
    width: 1600,
    crop: "limit",
    quality: 80
  };
  var img = $.cloudinary.image(idImage, filters);
  img.addClass('am-Profile-banner-img').appendTo(this.$view.find('.preview'));
  this.photo = img.attr('src');

  scope.autoSave(null, scope.editable);
};

APP.CreatorPostScreen.prototype.inputChange = function() {
  this.autoSave(null, this.editable);
};

APP.CreatorPostScreen.prototype.nameKeyUp = function() {
  clearTimeout(timeout);
  timeout = setTimeout(function() {
    scope.autoSave(null, scope.editable);
  }, 1000);
};

APP.CreatorPostScreen.prototype.deleteHandler = function(event) {
  event.preventDefault();
  this.delete.hide();
  this.previewBtn.hide();
  this.publishBtn.hide();
  this.amBtn.hide();
  this.deleteConfirm.show();
};

APP.CreatorPostScreen.prototype.cancelHandler = function(event) {
  event.preventDefault();
  this.delete.show();
  this.previewBtn.show();
  this.publishBtn.show();
  this.amBtn.show();
  this.deleteConfirm.hide();
};

APP.CreatorPostScreen.prototype.deleteForceHandler = function(event) {
  event.preventDefault();
  var url = '/blog/post/delete';
  this.requestHandler(url, {
    idPost: post.id
  }, this.deleteForceComplete);
};

APP.CreatorPostScreen.prototype.deleteForceComplete = function() {
  this.showFlash('succes', 'Se elimino tu post');
  setTimeout(function() {
    window.location.href = '/blog';
  }, 1000);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.DiscoverScreen = function(id, container, navigation, data) {
  this.container = container;
  this.navigation = navigation;
  this.data = data;
  APP.BaseScreen.call(this, id);
};

APP.DiscoverScreen.constructor = APP.DiscoverScreen;
APP.DiscoverScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.DiscoverScreen.prototype.setupUI = function() {
  DataApp.currentUrl = this.data.url;
  Utils.changeUrl(this.id, this.data.url);

  this.searchText = $('.search-text');
  this.featuredText = $('.featured-text');

  this.viewer = new APP.Viewer(this.id, this.container, this.navigation, this.data);
  this.filters = new APP.Filters(this.data.filters);
};

APP.DiscoverScreen.prototype.listeners = function() {
  Broadcaster.addEventListener(Events.FILTER_CHANGED, this.filterChangedHandler.bind(this));
  this.filters.start();
};

APP.DiscoverScreen.prototype.filterChangedHandler = function(event) {

  if (event.meta) $('.' + event.meta + '-text').text(event.newValue);

  if (this.filters.term && this.filters.term.length > 0) {
    this.searchText.show();
    this.searchText.text(decodeURIComponent(this.filters.term));
  } else {
    this.searchText.hide();
    this.searchText.text('');
  }

  if (this.filters.isFeatured) {
    this.featuredText.show();
    this.featuredText.text('AM');
  } else {
    this.featuredText.hide();
    this.featuredText.text('');
  }

  var texts = [],
    currentText;
  $('.navigation > span').filter(function(index, value) {
    if ($(value).css('display') !== 'none')
      texts.push($(value));
  });

  var i;
  for (i = 0; i < texts.length; i++) {
    if (texts[i].text().indexOf(' >') !== -1)
      texts[i].text(texts[i].text().replace(' >', '')).removeClass('link');
  }

  for (i = 0; i < texts.length - 1; i++) {
    texts[i].text(texts[i].text() + ' >').addClass('link');
  }

  if (DataApp.currentUrl === window.location.href) return;

  Utils.changeUrl(this.id, DataApp.currentUrl);
  if (this.filters.isInitialized) this.viewer.reset();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.EditWorkScreen = function() {
  APP.BaseScreen.call(this, 'editWork');
  this.work = work;
  this.userWork = work.User;
};

APP.EditWorkScreen.constructor = APP.EditWorkScreen;
APP.EditWorkScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.EditWorkScreen.prototype.setupUI = function() {
  this.workForm = $('.work-form');
  this.uploaderImage = new APP.UploaderImage($('.uploader-work'), this.uploaderImageComplete);
  this.uploaderImage.photo = work.photo;
  this.name = $('input[name=name]');
  this.category = $('select[name=category]');
  $('select[name=category]').find('option[value=' + category.id + ']').attr('selected', true);

  $('input[name=public]').attr('checked', work.public);
  $('input[name=nsfw]').attr('checked', work.nsfw);

  this.description = $('textarea[name=description]');
  this.tags = $('input[name=tags]');
  this.tags.tagsInput({
    height: '50px',
    width: '100%',
    defaultText: '+Etiqueta'
  });

  this.send = $('.send');
  this.sendLoading = $('.send-loading');

  this.workDelete = $('.work-delete');
  this.workDeleteConfirm = $('.work-delete-confirm');
  this.workDeleteCancel = $('.work-delete-cancel');
  this.workDeleteForce = $('.work-delete-force');
};

APP.EditWorkScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  this.workForm.submit(this.workFormSubmitHandler.bind(this));

  this.workDelete.click(this.workDeleteHandler.bind(this));
  this.workDeleteForce.click(this.workDeleteForceHandler.bind(this));
  this.workDeleteCancel.click(this.workDeleteCancelHandler.bind(this));

  $('input[type=checkbox]').change(this.checkPublicHandler);
  $('input[type=checkbox]').change();
};

APP.EditWorkScreen.prototype.checkPublicHandler = function() {
  $(this).parent().find('.value').text((this.checked ? 'On' : 'Off'));
}

APP.EditWorkScreen.prototype.workFormSubmitHandler = function(event) {
  event.preventDefault();
  var errors = [],
    scope = this;
  if (!this.uploaderImage.photo) errors.push('Ingrese una foto');
  if (Validations.notBlank(this.name.val())) errors.push('Ingrese un nombre');
  if (Validations.notBlank(this.category.val())) errors.push('Ingrese una categoria');
  if (Validations.notBlank(this.description.val())) errors.push('Ingrese una descripcion');
  if (this.tags.val().split(',')[0].length < 1) errors.push('Ingrese etiquetas');

  if (errors.length > 0) return this.showFlash('error', errors);

  this.sendLoading.show();
  this.send.hide();

  var data = this.workForm.serializeArray();
  $.each(data, function(index, value) {
    if (value.name === 'photo')
      value.value = scope.uploaderImage.photo;

    if (value.name === 'nsfw' || value.name === 'public')
      value.value = (value.value === 'on');
  });

  var url = DataApp.currentUser.url + '/work/update';
  this.requestHandler(url, data, this.workUpdatedComplete);
};

APP.EditWorkScreen.prototype.workUpdatedComplete = function(response) {
  this.showFlash('succes', 'Su obra se actualizo exitosamente')
  this.work = response.data.work;

  this.sendLoading.hide();
  this.send.show();

  var url = '/user/' + this.userWork.username + '/work/' + this.work.nameSlugify;
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    window.location.href = url;
  }, 1000);
};

APP.EditWorkScreen.prototype.workDeleteHandler = function(event) {
  event.preventDefault();
  this.workDelete.hide();
  this.workDeleteConfirm.show();
};

APP.EditWorkScreen.prototype.workDeleteForceHandler = function() {
  var url = DataApp.currentUser.url + '/work/delete';
  this.requestHandler(url, {
    idWork: this.work.id
  }, this.workDeleteForceComplete);
};

APP.EditWorkScreen.prototype.workDeleteForceComplete = function() {
  this.showFlash('succes', 'Se elimino tu obra');
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    if (DataApp.currentUser.isAdmin)
      window.location.href = '/';
    else
      window.location.href = DataApp.currentUser.url;
  }, 1000);
};

APP.EditWorkScreen.prototype.workDeleteCancelHandler = function(response) {
  this.workDelete.show();
  this.workDeleteConfirm.hide();
};

APP.EditWorkScreen.prototype.uploaderImageComplete = function(idImage) {
  this.$view.find('.upload').show();
  $('.cloudinary-fileupload').show();
  var filters = {
    width: 300,
    crop: 'limit'
  };
  $.cloudinary.image(idImage, filters).appendTo(this.$view.find('.preview'));
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.EditorScreen = function() {
  APP.BaseScreen.call(this, 'home');
};

APP.EditorScreen.constructor = APP.EditorScreen;
APP.EditorScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.EditorScreen.prototype.setupUI = function() {

  var config = {
    scaleFactor: 5,
    width: 567,
    height: 211,
    offsetX: 0,
    offsetY: 60
  };
  var color = '000000';

  var canvas = new fabric.Canvas('c1', {
    'backgroundColor': color,
    'width': config.width + (config.offsetX * 2),
    'height': config.height + (config.offsetY * 2)
  });

  var rect = new fabric.Rect({
    width: config.width,
    height: config.offsetY,
    left: 0,
    top: 0,
    fill: 'red',
    opacity: 0.5
  });
  var rect2 = new fabric.Rect({
    width: config.width,
    height: config.offsetY,
    left: 0,
    top: config.height + config.offsetY,
    fill: 'red',
    opacity: 0.5
  });

  rect.selectable = rect2.selectable = false;

  var imageTemp;


  var addImageFilter = function(url, filter) {
    return url.replace('upload/', 'upload/' + filter + '/');
  }

  var urlImage = 'http://res.cloudinary.com/hackdudes/image/upload/v1449719700/prueba2_e4tx4f.jpg';
  // var urlImage = 'http://res.cloudinary.com/hackdudes/image/upload/v1449596597/igw5cweq4gswvepaongi.jpg'
  var baseName = urlImage.replace(/^.*\/|\.[^.]*$/g, '')
  url = addImageFilter(urlImage, 'w_0.2,h_0.2');
  fabric.Image.fromURL(url, function(image) {
    imageTemp = image;
    //  image.scale(0.2);
    //  image.hasBorders = image.hasControls = image.hasRotatingPoint = false;
    canvas.add(image);
    canvas.calcOffset();

    canvas.sendToBack(image);
    canvas.setActiveObject(canvas.item(0));
    // canvas.item(0).hasBorders = false;
    canvas.item(0).lockRotation = true;
    canvas.item(0).hasRotatingPoint = false;
    canvas.item(0).lockUniScaling = true;
    canvas.centerObject(image);
    image.setCoords();
  }, {
    crossOrigin: 'Anonymous'
  });
  canvas.add(rect);
  canvas.add(rect2);

  $('input[type=color]').change(function() {
    color = $(this).val().replace('#', '');
    canvas.backgroundColor = '#' + color;
    canvas.renderAll();
  });

  var updateControls = function() {
    var source = canvas.toDataURL({
      top: config.offsetY,
      left: config.offsetX,
      height: config.height,
      width: config.weight
    });
    $('.preview').attr('src', source);
  }

  var original;
  var left;
  var center;
  var right;

  var lel = function() {
    var a = imageTemp.getBoundingRect();
    var x = Math.round(a.left * config.scaleFactor);
    var y = (Math.round(a.top * config.scaleFactor) - (60 * config.scaleFactor));
    var stageW = Math.round(config.width * config.scaleFactor);
    var stageH = Math.round(config.height * config.scaleFactor);
    var imageW = Math.round(imageTemp.getWidth() * config.scaleFactor);
    var imageH = Math.round(imageTemp.getHeight() * config.scaleFactor);
    var portion = Math.round(stageW / 3);

    var filters =
      'w_' + stageW + ',' +
      'h_' + stageH + ',e_colorize,co_rgb:' + color + '/' +
      'l_' + baseName + ',b_rgb:' + color + ',' +
      'w_' + imageW + ',' +
      'h_' + imageH + ',' +
      'x_' + x + ',' +
      'y_' + y + ',g_north_west/' +
      'x_' + (x < 0 ? (x * -1) : 0) + ',' +
      'y_' + (y < 0 ? (y * -1) : 0) + ',' +
      'w_' + stageW + ',' +
      'h_' + stageH + ',c_crop,g_north_west';
    original = addImageFilter(urlImage, filters);

    // var filters =
    // 'w_' + stageW + ',' +
    // 'h_' + stageH + ',e_colorize,co_rgb:' + color + '/' +
    // 'l_' + baseName + ',b_rgb:' + color + ',' +
    // 'w_' + imageW + ',' +
    // 'h_' + imageH + ',' +
    // 'x_' + x + ',' +
    // 'y_' + y + ',g_north_west/' +
    // 'x_' + (x < 0 ? (x * -1) : 0) + ',' +
    // 'y_' + (y < 0 ? (y * -1) : 0) + ',' +
    // 'w_' + stageW + ',' +
    // 'h_' + stageH + ',c_crop,g_north_west';
    // var temp = addImageFilter(urlImage, filters);
    // window.open(temp, '_blank');

    config.scaleFactor = 1.5;
    x = Math.round(a.left * config.scaleFactor);
    y = (Math.round(a.top * config.scaleFactor) - (60 * config.scaleFactor));
    stageW = Math.round(config.width * config.scaleFactor);
    stageH = Math.round(config.height * config.scaleFactor);
    imageW = Math.round(imageTemp.getWidth() * config.scaleFactor);
    imageH = Math.round(imageTemp.getHeight() * config.scaleFactor);
    portion = Math.round(stageW / 3);
    var stripe = 8;
    var distortion = -13;


    filters =
      'w_' + stageW + ',' +
      'h_' + stageH + ',e_colorize,co_rgb:' + color + '/' +
      'l_' + baseName + ',b_rgb:' + color + ',' +
      'w_' + imageW + ',' +
      'h_' + imageH + ',' +
      'x_' + x + ',' +
      'y_' + y + ',g_north_west/' +
      'x_' + ((x < 0 ? (x * -1) : 0)) + ',' +
      'y_' + (y < 0 ? (y * -1) : 0) + ',' +
      'w_' + portion + ',' +
      'h_' + stageH + ',c_crop,g_north_west/' +
      'e_distort:0:0:' + portion + ':0:' + (portion - stripe) + ':' + stageH + ':' + stripe + ':' + stageH + '/' +
      'c_pad,h_2.0,w_1.0/l_radial,e_displace,y_' + distortion + '/e_trim/u_mugleft/w_0.7';
    left = addImageFilter(urlImage, filters);

    filters =
      'w_' + stageW + ',' +
      'h_' + stageH + ',e_colorize,co_rgb:' + color + '/' +
      'l_' + baseName + ',b_rgb:' + color + ',' +
      'w_' + imageW + ',' +
      'h_' + imageH + ',' +
      'x_' + x + ',' +
      'y_' + y + ',g_north_west/' +
      'x_' + ((x < 0 ? (x * -1) : 0) + (Math.round(portion) * 1)) + ',' +
      'y_' + (y < 0 ? (y * -1) : 0) + ',' +
      'w_' + portion + ',' +
      'h_' + stageH + ',c_crop,g_north_west/' +
      'e_distort:0:0:' + portion + ':0:' + (portion - stripe) + ':' + stageH + ':' + stripe + ':' + stageH + '/' +
      'c_pad,h_2.0,w_1.0/l_radial,e_displace,y_' + distortion + '/e_trim/u_mugcenter/w_0.7';
    center = addImageFilter(urlImage, filters);

    filters =
      'w_' + stageW + ',' +
      'h_' + stageH + ',e_colorize,co_rgb:' + color + '/' +
      'l_' + baseName + ',b_rgb:' + color + ',' +
      'w_' + imageW + ',' +
      'h_' + imageH + ',' +
      'x_' + x + ',' +
      'y_' + y + ',g_north_west/' +
      'x_' + ((x < 0 ? (x * -1) : 0) + (Math.round(portion) * 2)) + ',' +
      'y_' + (y < 0 ? (y * -1) : 0) + ',' +
      'w_' + portion + ',' +
      'h_' + stageH + ',c_crop,g_north_west/' +
      'e_distort:0:0:' + portion + ':0:' + (portion - stripe) + ':' + stageH + ':' + stripe + ':' + stageH + '/' +
      'c_pad,h_2.0,w_1.0/l_radial,e_displace,y_' + distortion + '/e_trim/u_mugright/w_0.7';
    right = addImageFilter(urlImage, filters);


    $('.original').attr('src', original);
    $('.left').attr('src', left);
    $('.center').attr('src', center);
    $('.right').attr('src', right);

  };

  $('.save-btn').click(lel);

  canvas.on({
    'mouse:up': updateControls,
    'object:resizing': updateControls
  });
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.FeedScreen = function() {
  APP.BaseScreen.call(this, 'feed');

  this.idCollections = [];
  this.collections = [];
  this.currentWork = null;
};

APP.FeedScreen.constructor = APP.FeedScreen;
APP.FeedScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.FeedScreen.prototype.setupUI = function() {
  APP.BaseScreen.prototype.setupUI.call(this);

  this.saveBtn = $('.save-collections');
  this.saveBtnLoading = $('.save-collections-loading');

  this.collectionsContainer = $('.collections');
  this.collectionForm = $('.add-collection-form');
  this.shareFB = $('.share-fb');

  this.viewer = new APP.Viewer('action', $('.feed-inner'), 'infinite', actions);

  new Clipboard('.copy', {
    text: this.copyHandler.bind(this)
  });
};

APP.FeedScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.saveBtn.click(this.saveClickHandler.bind(this));

  var collectionsUrl = DataApp.currentUser.url + '/collection/all';
  this.requestHandler(collectionsUrl, {}, this.collectionsHandlerComplete);

  this.collectionForm.submit(this.collectionFormHandler.bind(this));

  var addCollectionHandler = this.addCollectionHandler.bind(this);
  Broadcaster.addEventListener(Events.ADD_COLLECTION, addCollectionHandler);

  var feedShareHandler = this.feedShareHandler.bind(this);
  Broadcaster.addEventListener(Events.SHARE, feedShareHandler);

  this.shareFB.click(this.shareFBHandler.bind(this));
};


APP.FeedScreen.prototype.copyHandler = function(trigger) {
  $('#lean_overlay').trigger("click");
  this.showFlash('succes', 'Link Copiado');
  return DataApp.baseUrl + 'user/' + this.currentWork.User.username +
    '/work/' + this.currentWork.nameSlugify;
};


APP.FeedScreen.prototype.feedShareHandler = function(event) {
  this.currentWork = event.data.work;
};

APP.FeedScreen.prototype.shareFBHandler = function() {
  Utils.shareFBWork(this.currentWork);
};

APP.FeedScreen.prototype.collectionFormHandler = function(event) {
  event.preventDefault();
  var url = DataApp.currentUser.url + '/collection/create';
  this.requestHandler(url, $(event.target).serialize(), this.collectionFormComplete);
};

APP.FeedScreen.prototype.collectionFormComplete = function(response) {
  var item = new APP.CollectionItem(response.data.collection);
  item.addEventListener(Events.COLLECTION_ITEM_SELECTED, this.collectionItemSelected.bind(this));
  this.collections.push(item);
  this.collectionsContainer.append(item.view);
};

APP.FeedScreen.prototype.addCollectionHandler = function(event) {
  this.currentWork = event.data.work;
  var url = DataApp.currentUser.url + '/work/inside_collection';
  var payload = {
    idWork: this.currentWork.id
  };
  this.requestHandler(url, payload, this.insideCollectionHandler);
};

APP.FeedScreen.prototype.insideCollectionHandler = function(response) {
  var collections = response.data.collections;
  var i, j;
  for (i = 0; i < this.collections.length; i++)
    this.collections[i].view.removeClass('selected');

  this.idCollections = [];
  for (i = 0; i < collections.length; i++) {
    for (j = 0; j < this.collections.length; j++) {
      if (collections[i].id === this.collections[j].data.id) {
        this.idCollections.push(collections[i].id);
        this.collections[j].view.addClass('selected');
      }
    }
  }
};

APP.FeedScreen.prototype.saveClickHandler = function() {
  this.saveBtn.hide();
  this.saveBtnLoading.show();

  var url = DataApp.currentUser.url + '/work/add_to_collection';
  var payload = {
    collections: JSON.stringify(this.idCollections),
    idWork: this.currentWork.id
  };
  this.requestHandler(url, payload, this.saveRequestComplete);
};

APP.FeedScreen.prototype.saveRequestComplete = function() {
  this.saveBtn.show();
  this.saveBtnLoading.hide();
  this.showFlash('succes', 'Su actualizo tus colecciones');

  $('#lean_overlay').trigger('click');
};

APP.FeedScreen.prototype.collectionsHandlerComplete = function(response) {
  var collections = response.data.collections;
  var i, item;
  for (i = 0; i < collections.length; i++) {
    item = new APP.CollectionItem(collections[i]);
    this.collections.push(item);
    item.addEventListener(Events.COLLECTION_ITEM_SELECTED, this.collectionItemSelected.bind(this));
    this.collectionsContainer.append(item.view);
  }
};

APP.FeedScreen.prototype.collectionItemSelected = function(event) {
  var item = event.target;
  var index = this.idCollections.indexOf(item.data.id);
  if (index === -1)
    this.idCollections.push(item.data.id);
  else
    this.idCollections.splice(index, 1);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Filters = function(filters) {
  this.filters = filters;

  this.oldCategory = this.filters.currentCategory;
  this.oldOrder = this.filters.currentOrder;

  this.isFeatured = Utils.getUrlParameter('featured') !== undefined;
  this.term = Utils.getUrlParameter('term');
  this.currentCategory = this.currentOrder = null;

  this.setupUI();
  this.listeners();

  this.isInitialized = false;
};

APP.Filters.constructor = APP.Filters;


APP.Filters.prototype.setupUI = function() {
  var filterRight = $('.filter.right');
  var rightSelect = $('.filter.right .am-Select')

  var rightFilterItems

  setTimeout(function() {
    rightFilterItems = $('.filter.right .am-Filter-item')
    $(rightFilterItems).click(function() {
      setTimeout(function() {
        $(rightSelect).trigger("click")
      }, 300)
    })
  }, 500)

  $(rightSelect).click(function() {
    var state = filterRight.attr('data-state')
    if (state == 'closed') filterRight.attr('data-state', 'open')
    else filterRight.attr('data-state', 'closed')
  })

  var filterLeft = $('.filter.left')
  var leftSelect = $('.filter.left .am-Select')
  var discoverContent = $('.discover-content')

  $(leftSelect).click(function() {
    var state = filterLeft.attr('data-state')
    if (state == 'closed') {
      filterLeft.attr('data-state', 'open')
      discoverContent.attr('data-state', 'expand').trigger('resetLayout')
    } else {
      filterLeft.attr('data-state', 'closed')
      discoverContent.attr('data-state', 'reduce').trigger('resetLayout')
    }
  })

  var device = new Device({
    toDesktop: function() {
      console.log('toDesktop!')
    },
    toMobile: function() {
      console.log('toMobile!')
      $('.filter.left .left-menu').css('display', 'block')
    }
  })

  if (device.getVal() == "mobile") {
    $(leftSelect).trigger("click")
    $('.filter.left .left-menu').css('display', 'block')
  }


  function Device(options) {

    var val = window.innerWidth < 1000 ? 'mobile' : 'desktop',
      toDesktop = options.toDesktop,
      toMobile = options.toMobile;


    window.addEventListener('resize', function() {

      var temp = val;

      val = window.innerWidth < 1000 ? 'mobile' : 'desktop';

      if (temp == 'mobile' && val == 'desktop') toDesktop();
      if (temp == 'desktop' && val == 'mobile') toMobile();
    });

    function getVal() {
      return val;
    }

    return {
      getVal: getVal
    };
  }

  this.filters.categories.unshift({
    name: 'Todo',
    nameSlugify: 'all'
  });

  this.itemFilterRenderer(this.filters.categories, 'category');
  this.itemFilterRenderer(this.filters.order, 'order');

  this.featuredBtn = $('.am-Switch-button');
  this.searchInput = $('.am-Search-input input');
  this.searchBtn = $('.search-btn');
  this.closeBtn = $('.close-btn');

  this.categories = $('[data-meta=category]');
  this.orders = $('[data-meta=order]');

  $('[data-value=' + this.oldCategory + ']').parent().addClass('selected');
  $('[data-value=' + this.oldOrder + ']').parent().addClass('selected');

  if (this.isFeatured) $('input[type=checkbox]').prop('checked', true);
  this.navigation = $('.am-navigation-text');

  this.needsToClose = false;
};

APP.Filters.prototype.itemFilterRenderer = function(data, meta) {
  var item = APP.TemplateManager.instance.getFromDoc('filter-item');
  $.each(data, function(index, value) {
    value.meta = meta;
    $('.filter-' + meta).append(item(value));
  });
};

APP.Filters.prototype.listeners = function() {
  this.categories.on('click', this.filterItemHandler.bind(this, 'category'));
  this.orders.on('click', this.filterItemHandler.bind(this, 'order'));
  this.featuredBtn.on('click', this.featuredHandler.bind(this));

  this.term = this.term === undefined ? '' : this.term;
  this.searchInput.val(decodeURIComponent(this.term));

  this.searchBtn.click(this.searchHandler.bind(this));

  this.searchInput.keyup(this.searchKeyUpHandler.bind(this));
  this.searchInput.keypress(this.searchKeyPressHandler.bind(this));

  this.navigation.click(this.navigationClickHandler.bind(this));

  this.closeBtn.click(this.closeClickHandler.bind(this));
  this.searchInput.keyup();
};

APP.Filters.prototype.searchKeyUpHandler = function(event) {
  this.searchInput.val().length > 0 ? this.closeBtn.show() : this.closeBtn.hide();
};

APP.Filters.prototype.closeClickHandler = function(event) {
  this.searchInput.val('');
  this.closeBtn.hide();
  this.needsToClose = true;
  this.searchBtn.click();
};

APP.Filters.prototype.navigationClickHandler = function(event) {
  var obj = $(event.target);
  var currentIndex, url = DataApp.currentUrl;
  this.navigation.each(function(index, value) {
    var idValue = $(value).attr('id');
    if ($(value).hasClass('link')) {
      if (obj.attr('id') === idValue) currentIndex = index;
    }
    if (index > currentIndex) {
      url = Utils.removeURLParameter(url, idValue);
    }
  });
  window.location.href = url;
};

APP.Filters.prototype.searchKeyPressHandler = function(event) {
  if (event.which !== 13) return;
  var value = encodeURIComponent($(event.target).val());
  if (value.length > 0) {
    if (this.term) {
      DataApp.currentUrl = DataApp.currentUrl.replace('term=' + this.term, 'term=' + value);
    } else {
      DataApp.currentUrl = DataApp.currentUrl + '&term=' + value;
    }
    this.term = value;
  } else {
    if (DataApp.currentUrl.indexOf('&term=' + this.term) > -1) {
      DataApp.currentUrl = DataApp.currentUrl.replace('&term=' + this.term, '');
    }
    if (DataApp.currentUrl.indexOf('term=' + this.term) > -1) {
      DataApp.currentUrl = DataApp.currentUrl.replace('term=' + this.term, '');
    }
    this.term = undefined;
  }
  if (this.needsToClose)
    return window.location.href = DataApp.currentUrl;

  Broadcaster.dispatchEvent(Events.FILTER_CHANGED);
};

APP.Filters.prototype.searchHandler = function(event) {
  event.preventDefault();
  this.searchInput.trigger({
    type: 'keypress',
    which: 13,
    keyCode: 13
  });
}

APP.Filters.prototype.featuredHandler = function() {
  if (this.isFeatured)
    DataApp.currentUrl = DataApp.currentUrl.replace('&featured=1', '');
  else
    DataApp.currentUrl = DataApp.currentUrl + '&featured=1';
  this.isFeatured = !this.isFeatured;
  Broadcaster.dispatchEvent(Events.FILTER_CHANGED);
};

APP.Filters.prototype.start = function() {
  $('[data-value=' + this.oldCategory + ']').click();
  $('[data-value=' + this.oldOrder + ']').click();

  this.isInitialized = true;
};

APP.Filters.prototype.filterItemHandler = function(meta, event) {
  var filterCapitalized = Utils.capitalize(meta);
  var oldFilter = 'old' + filterCapitalized;
  var currentFilter = 'current' + filterCapitalized;

  var current = $(event.currentTarget).find('.am-Filter-option');
  this[currentFilter] = current.attr('data-value');

  $('[data-value=' + this[oldFilter] + ']').parent().removeClass('selected');
  $('[data-value=' + this[currentFilter] + ']').parent().addClass('selected');

  DataApp.currentUrl = DataApp.currentUrl.replace(this[oldFilter], this[currentFilter]);
  this[oldFilter] = this[currentFilter];
  var newValue = $(event.target).attr('data-name');

  Broadcaster.dispatchEvent(Events.FILTER_CHANGED, {
    meta: meta,
    newValue: newValue
  });
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.HomeScreen = function() {
  APP.BaseScreen.call(this, 'home');

  this.usersViewer = new APP.Viewer('user', $('.grid'), null, users);
  this.worksViewer = new APP.Viewer('work', $('.grid-works'), null, works);

  var $banner = $('.banner-user').detach();
  this.usersViewer.container.append($banner).masonry('appended', $banner);


  this.slider = new Slider(document.querySelector('.slider'), {
    slideClass: 'js-slide',
    sliderNavItemClass: 'js-slideNavItem'
  });
};

APP.HomeScreen.constructor = APP.HomeScreen;
APP.HomeScreen.prototype = Object.create(APP.BaseScreen.prototype);
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.NotificationsScreen = function() {
  APP.BaseScreen.call(this, 'notifications');
};

APP.NotificationsScreen.constructor = APP.NotificationsScreen;
APP.NotificationsScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.NotificationsScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.PostScreen = function() {
  APP.BaseScreen.call(this, 'post');

  this.following = false;
};

APP.PostScreen.constructor = APP.PostScreen;
APP.PostScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.PostScreen.prototype.setupUI = function() {
  this.viewer = new APP.Viewer('post', $('.blog-articles-container'), null, posts);
  this.loginReview = $('.login-review');
  this.followBtn = $('.following');
  this.shareFb = $('.share-fb');
  this.shareTw = $('.share-tw');

  this.editor = new MediumEditor('.editable', {
    buttonLabels: 'fontawesome',
    toolbar: false,
    spellcheck: false,
    disableEditing: true
  });

  this.reviewForm = $('.review-form');
  this.reviewContainer = $('.reviews-items-container');
  for (var i = 0; i < reviews.length; i++)
    this.reviewContainer.append(new APP.Review(reviews[i]).view);

  this.likeBtn = $('.like-btn');

  if (DataApp.currentUser) {
    if (DataApp.currentUser.id === post.User.id)
      return this.followBtn.hide();

    var followingUrl = DataApp.currentUser.url + '/isFollowing';
    this.requestHandler(followingUrl, {
      idUser: post.User.id
    }, this.isFollowingComplete);
  }
};


APP.PostScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);

  this.reviewForm.submit(this.reviewFormHandler.bind(this));
  this.likeBtn.click(this.likeBtnHandler.bind(this));
  this.loginReview.click(this.loginReviewHandler.bind(this));
  this.followBtn.click(this.followHandler.bind(this));
  this.shareFb.click(this.shareFBHandler.bind(this));
  this.shareTw.click(this.shareTWHandler.bind(this));
};

APP.PostScreen.prototype.shareFBHandler = function() {
  Utils.shareFBPost(post);
};
APP.PostScreen.prototype.shareTWHandler = function() {
  Utils.shareTWPost(post);
};

APP.PostScreen.prototype.followHandler = function() {
  Utils.checkAuthentication();
  var url = DataApp.currentUser.url + (this.isFollowing ? '/unfollow/' : '/follow/');
  this.requestHandler(url, {
    idUser: post.User.id
  }, this.followComplete);
};

APP.PostScreen.prototype.followComplete = function(response) {
  if (this.isFollowing) {
    this.followBtn.removeClass('following').text('+ SEGUIR');
  } else {
    this.followBtn.addClass('following').text('Siguiendo');
  }
  this.isFollowing = !this.isFollowing;
};

APP.PostScreen.prototype.likeBtnHandler = function(event) {
  event.preventDefault();
  Utils.checkAuthentication();

  if (!post.liked) {
    var url = '/blog/post/like';
    this.requestHandler(url, {
      idPost: post.id
    }, this.likeComplete);
  }
};

APP.PostScreen.prototype.loginReviewHandler = function() {
  Utils.checkAuthentication();
};

APP.PostScreen.prototype.isFollowingComplete = function(response) {
  this.isFollowing = response.data.following;
  this.isFollowing && this.followBtn.addClass('following').text('Siguiendo');
};

APP.PostScreen.prototype.likeComplete = function(response) {
  post.liked = !post.liked;
  $('.likes').text(response.data.likes);
  this.likeBtn.addClass('liked');
};


APP.PostScreen.prototype.reviewFormHandler = function(event) {
  event.preventDefault();
  var url = '/blog/post/review/create';
  this.requestHandler(url, $(event.target).serialize(), this.reviewComplete);
};

APP.PostScreen.prototype.reviewComplete = function(response) {
  $('.value-input').val('');
  this.reviewContainer.append(new APP.Review(response.data.review).view);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.ProductScreen = function() {
  APP.BaseScreen.call(this, 'product');

  this.currentItem = this.oldItem;
  this.currentSection, this.oldSection;
  this.collections = [];
  this.idCollections = [];

  this.following = false;
};

APP.ProductScreen.constructor = APP.ProductScreen;
APP.ProductScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.ProductScreen.prototype.setupUI = function() {

  for (var i = 0; i < categories.length; i++) {
    var category = categories[i],
      products = [];
    for (var j = 0; j < category.subCategories.length; j++) {
      var subCategory = category.subCategories[j];
      for (var k = 0; k < subCategory.innerCategories.length; k++) {
        var innerCategory = subCategory.innerCategories[k];
        for (var l = 0; l < innerCategory.Products.length; l++) {
          products.push(innerCategory.Products[l]);
        }
      }
    }
    new APP.Viewer('carrouselItem', $('.' + category.nameSlugify), null, products);
  }

  new APP.Viewer('carrouselItem', $('.more'), null, more, {
    worked: true
  });
  new APP.Viewer('carrouselItem', $('.similar'), null, similar, {
    worked: true
  });

  new APP.Carrousel($('.js-more-carousel'), $('.more'));
  new APP.Carrousel($('.js-similar-carousel'), $('.similar'));

  new APP.PhotoSwipe('product');

  this.reviewsContainer = $('.reviews-items-container');
  for (var i = 0; i < reviews.length; i++)
    this.reviewsContainer.append(new APP.Review(reviews[i]).view);

  this.shareFb = $('.share-fb');
  this.askBtn = $('.ask-availability');
  this.loginReview = $('.login-review');
  this.askRequester = $('.ask-requester');
  this.thanksRequester = $('.thanks-requester');
  this.likeBtn = $('.like-btn');
  this.afterLike = $('.after-like');
  this.saveBtn = $('.save-collections');
  this.saveBtnLoading = $('.save-collections-loading');
  this.followBtn = $('.am-Follow-button');
  this.collectionsContainer = $('.collections');
  this.collectionForm = $('.add-collection-form');
  this.reviewForm = $('.review-form');
  this.reviewContainer = $('.reviews-items-container');

  this.prevBtn = $('.prev-btn');
  this.nextBtn = $('.next-btn');

  new Clipboard('.copy', {
    text: this.copyHandler.bind(this)
  });
}

APP.ProductScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  this.shareFb.click(this.shareFBHandler.bind(this));

  $('.menu-item').click(this.menuItemHandler.bind(this));
  $('.menu-item[data-name=' + currentPath + ']').click();

  this.loginReview.click(this.loginReviewHandler.bind(this));
  this.saveBtn.click(this.saveClickHandler.bind(this));

  if (DataApp.currentUser) {
    var collectionsUrl = DataApp.currentUser.url + '/collection/all';
    this.requestHandler(collectionsUrl, {
      meta: 'products'
    }, this.collectionsHandlerComplete);

    if (!owner) {
      var followingUrl = DataApp.currentUser.url + '/isFollowing';
      this.requestHandler(followingUrl, {
        idUser: product.User.id
      }, this.isFollowingComplete);
    }
  }

  this.likeBtn.click(this.likeBtnHandler.bind(this));

  this.followBtn.click(this.followHandler.bind(this));
  this.collectionForm.submit(this.collectionFormHandler.bind(this));
  this.reviewForm.submit(this.reviewFormHandler.bind(this));

  $(document).bind('keyup', this.documentKeyupHandler.bind(this));
};

APP.ProductScreen.prototype.documentKeyupHandler = function(event) {
  if (event.keyCode === 39 && this.prevBtn.length > 0)
    window.location.href = this.prevBtn.attr('href');

  if (event.keyCode === 37 && this.nextBtn.length > 0)
    window.location.href = this.nextBtn.attr('href');
};

APP.ProductScreen.prototype.copyHandler = function(trigger) {
  $('#lean_overlay').trigger("click");
  this.showFlash('succes', 'Link Copiado');
  return window.location.href;
};

APP.ProductScreen.prototype.reviewFormHandler = function(event) {
  event.preventDefault();
  var url = DataApp.currentUser.url + '/product/review/create';
  this.requestHandler(url, $(event.target).serialize(), this.reviewComplete);
};

APP.ProductScreen.prototype.reviewComplete = function(response) {
  $('.value-input').val('');
  this.reviewContainer.append(new APP.Review(response.data.review).view);
}


APP.ProductScreen.prototype.followHandler = function() {
  Utils.checkAuthentication();
  var url = DataApp.currentUser.url + (this.isFollowing ? '/unfollow/' : '/follow/');
  this.requestHandler(url, {
    idUser: product.User.id
  }, this.followComplete);
};

APP.ProductScreen.prototype.followComplete = function(response) {
  console.log(response);
  if (this.isFollowing) {
    this.followBtn.removeClass('following').text('+ SEGUIR');
  } else {
    this.followBtn.addClass('following').text('Siguiendo');
  }

  this.isFollowing = !this.isFollowing;
}

APP.ProductScreen.prototype.isFollowingComplete = function(response) {
  this.isFollowing = response.data.following;
  this.isFollowing && this.followBtn.addClass('following').text('Siguiendo');
}

APP.ProductScreen.prototype.saveClickHandler = function() {
  this.saveBtn.hide();
  this.saveBtnLoading.show();

  var url = DataApp.currentUser.url + '/product/add_to_collection';
  var payload = {
    collections: JSON.stringify(this.idCollections),
    idProduct: product.id
  };
  this.requestHandler(url, payload, this.saveRequestComplete);
};

APP.ProductScreen.prototype.saveRequestComplete = function() {
  this.saveBtn.show();
  this.saveBtnLoading.hide();
  this.showFlash('succes', 'Su actualizo tus colecciones');

  $('#lean_overlay').trigger('click');
};


APP.ProductScreen.prototype.collectionFormHandler = function(event) {
  event.preventDefault();
  var url = DataApp.currentUser.url + '/collection/create';
  this.requestHandler(url, $(event.target).serialize(), this.collectionFormComplete);
};

APP.ProductScreen.prototype.collectionFormComplete = function(response) {
  var item = new APP.CollectionItem(response.data.collection);
  item.addEventListener(Events.COLLECTION_ITEM_SELECTED, this.collectionItemSelected.bind(this));
  this.collections.push(item);
  this.collectionsContainer.append(item.view);
};


APP.ProductScreen.prototype.likeBtnHandler = function() {
  Utils.checkAuthentication();
  if (!product.liked) {
    var url = DataApp.currentUser.url + '/product/like';
    this.requestHandler(url, {
      idProduct: product.id
    }, this.likeComplete);
  }
};

APP.ProductScreen.prototype.likeComplete = function(response) {
  product.liked = !product.liked;
  $('.likes').text(response.data.likes);
  this.likeBtn.parent().addClass('active');
  this.afterLike.show();
};

APP.ProductScreen.prototype.collectionsHandlerComplete = function(response) {
  var collections = response.data.collections;
  var i, item;
  for (i = 0; i < collections.length; i++) {
    item = new APP.CollectionItem(collections[i]);
    this.collections.push(item);
    item.addEventListener(Events.COLLECTION_ITEM_SELECTED, this.collectionItemSelected.bind(this));
    this.collectionsContainer.append(item.view);
  }

  var url = DataApp.currentUser.url + '/product/inside_collection';
  this.requestHandler(url, {
    idProduct: product.id
  }, this.insideCollectionHandler);
};

APP.ProductScreen.prototype.insideCollectionHandler = function(response) {
  var collections = response.data.collections;
  var i, j;
  for (i = 0; i < this.collections.length; i++)
    this.collections[i].view.removeClass('selected');

  this.idCollections = [];
  for (i = 0; i < collections.length; i++) {
    for (j = 0; j < this.collections.length; j++) {
      if (collections[i].id === this.collections[j].data.id) {
        this.idCollections.push(collections[i].id);
        this.collections[j].view.addClass('selected');
      }
    }
  }
};

APP.ProductScreen.prototype.collectionItemSelected = function(event) {
  var item = event.target;
  var index = this.idCollections.indexOf(item.data.id);
  if (index === -1)
    this.idCollections.push(item.data.id);
  else
    this.idCollections.splice(index, 1);
};

APP.ProductScreen.prototype.loginReviewHandler = function() {
  Utils.checkAuthentication();
};

APP.ProductScreen.prototype.menuItemHandler = function(event) {
  this.currentItem = $(event.currentTarget);
  var path = this.currentItem.data('name');
  this.currentSection = $('.' + path + '-container');
  this.currentSection.show();
  var url = '/user/' + product.User.username + '/product/' + product.nameSlugify +
    '/' + (path === 'index' ? '' : path);

  $('.menu-item').removeClass('selected');
  this.currentItem.addClass('selected');

  this.oldSection && this.oldSection.hide();
  this.oldSection = this.currentSection;
  Utils.changeUrl(DataApp.baseTitle + Utils.capitalize(path), url);
};

APP.ProductScreen.prototype.shareFBHandler = function() {
  Utils.shareFBWork(product);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.ProfileScreen = function() {
  this.currentItem, this.oldItem;
  this.currentSection, this.oldSection;
  this.currentViewer, this.oldViewer;

  this.paths = [];
  this.viewers = [];
  this.uploaderCover = new APP.UploaderImage($('.uploader-cover'), this.uploadComplete);

  APP.BaseScreen.call(this, 'profile');
};

APP.ProfileScreen.constructor = APP.ProfileScreen;
APP.ProfileScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.ProfileScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  $('.am-Profile-menu-item').click(this.menuItemClickHandler.bind(this));
  $('.am-Follow-button').click(this.followClickHandler.bind(this));
  $('.cancel-icon').click(this.cancelClickHandler.bind(this));
  $('.save-icon').click(this.saveClickHandler.bind(this));

  $('.am-Profile-menu-item[data-name=' + currentPath + ']').click();
};

APP.ProfileScreen.prototype.saveClickHandler = function() {
  var url = DataApp.currentUser.url + '/account/update_cover';
  this.requestHandler(url, {
    cover: this.uploaderCover.photo
  }, this.updateCoverComplete);
  $('.save-icon, .cancel-icon').hide();
  $('.cloudinary-fileupload, .upload').show();
};

APP.ProfileScreen.prototype.followClickHandler = function() {
  Utils.checkAuthentication();
  var url = DataApp.currentUser.url + (profile.following ? '/unfollow/' : '/follow/');
  this.requestHandler(url, {
    idUser: profile.id
  }, this.followComplete);
};

APP.ProfileScreen.prototype.menuItemClickHandler = function(event) {
  this.currentItem = $(event.currentTarget);
  var path = this.currentItem.data('name');

  var url = '/user/' + profile.username + '/' + (path === 'portfolio' ? '' : path)
  Utils.changeUrl(DataApp.baseTitle + Utils.capitalize(path), url);

  this.currentSection = $('.' + path + '-wrapper');

  this.oldItem && this.oldItem.removeClass('selected');
  this.oldViewer && this.oldViewer.suspend();
  this.oldSection && this.oldSection.hide();

  this.currentItem.addClass('selected');
  this.currentSection.show();

  if (this.paths.indexOf(path) === -1) {
    var template = this.getTemplate(path),
      section = $('.' + path + '-container');
    this.currentViewer = new APP.Viewer(template, section, 'infinite', null);
    this.currentViewer.navigationManager.navigator.needChangeUrl = true;
    this.viewers.push(this.currentViewer);
    this.paths.push(path);
  } else {
    this.currentViewer = this.viewers[this.paths.indexOf(path)]
    this.currentViewer.restart();
  }

  this.oldItem = this.currentItem;
  this.oldViewer = this.currentViewer;
  this.oldSection = this.currentSection;
}

APP.ProfileScreen.prototype.updateCoverComplete = function(response) {
  DataApp.currentUser.cover = this.uploaderCover.photo;
  $('.save-icon, .cancel-icon').hide();
  $('.cloudinary-fileupload, .upload').show();
};

APP.ProfileScreen.prototype.cancelClickHandler = function() {
  $('.preview > img').attr('src', DataApp.currentUser.cover);
  $('.save-icon, .cancel-icon').hide();
  $('.cloudinary-fileupload, .upload').show();
};

APP.ProfileScreen.prototype.followComplete = function(response) {
  if (!profile.following)
    $('.am-Follow-button').text('Siguiendo').addClass('following');
  else
    $('.am-Follow-button').text('+Seguir').removeClass('following');

  profile.following = !profile.following;
};
APP.ProfileScreen.prototype.uploadComplete = function(idImage) {
  var filters = {
    format: 'jpg',
    width: 1600,
    crop: "limit",
    quality: 80
  };
  var img = $.cloudinary.image(idImage, filters);
  img.addClass('am-Profile-banner-img').appendTo(this.$view.find('.preview'));
  this.photo = img.attr('src');
  $('.save-icon , .cancel-icon').show();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.SellScreen = function() {
  APP.BaseScreen.call(this, 'sell');
};

APP.SellScreen.constructor = APP.SellScreen;
APP.SellScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.SellScreen.prototype.setupUI = function() {
  this.createBtn = $('.create-btn');

  this.product1 = new APP.CreatorProductItem(1);
  this.product2 = new APP.CreatorProductItem(2, categories[1]);
  this.product3 = new APP.CreatorProductItem(3, categories[2]);
  this.product4 = new APP.CreatorProductItem(4, categories[3]);

  this.products = [this.product1, this.product2, this.product3, this.product4];

  this.oldIndex = null;
  this.currentIndex = 0;
};

APP.SellScreen.prototype.listeners = function() {
  this.createBtn.click(this.createHandler.bind(this));

  var scope = this;
  $('.product-creator').click(function(e) {
    e.preventDefault();

    scope.currentIndex = parseInt($(this).data('prod'), 10);

    // if(scope.currentIndex === scope.oldIndex)) {
    //   return scope['product' + scope.oldIndex].close();
    // }

    if (scope.oldIndex)
      scope['product' + scope.oldIndex].close();

    scope['product' + scope.currentIndex].open();

    scope.oldIndex = scope.currentIndex;
  });
};

APP.SellScreen.prototype.createHandler = function(e) {
  e.preventDefault();

  $('.create-btn').addClass('hide');
  $('.create-btn-loading').removeClass('hide');

  var url = DataApp.currentUser.url + '/product/create';

  var i, payload = [];
  for (i = 0; i < this.products.length; i++) {
    payload = _.union(payload, this.products[i].getPayload());
  }
  this.requestHandler(url, {
    products: JSON.stringify(payload)
  }, this.productCreatedComplete);
};


APP.SellScreen.prototype.productCreatedComplete = function(response) {
  this.showFlash('succes', 'Su producto se envió a revisión');
  var timeout = setTimeout(function() {
    clearTimeout(timeout);
    window.location.href = DataApp.currentUser.url + '/products';
  }, 2000);
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.Viewer = function(id, container, navigation, data, options) {
  this.container = container;
  this.options = options;

  if (id === 'carrouselItem' || id === 'action' || id === 'notificationItem' || id === 'tableUser' || id === 'tableWork' || id === 'post' || id === 'postMinimal' || id === 'tableProductApplying') {} else {
    this.setupMasonry();
  }

  this.id = id;
  this.navigation = navigation;
  this.initialize = true;
  this.fromExternal = false;
  if (this.navigation) {
    this.navigationManager = new APP.NavigationManager(navigation);
    if (data) {
      this.navigationManager.navigator.currentPage = data.pagination.page;
      this.navigationManager.navigator.totalPages = data.pagination.pages;
    } else {
      this.navigationManager.navigator.currentPage = 1;
      this.navigationManager.navigator.totalPages = 1;
    }
    this.navigationManager.navigator.start();
    this.listeners();
    if (data) {
      this.addItems(data.items);
    } else {
      this.fromExternal = true;
      this.navigationManager.navigator.gotoPage(1, true);
    }
  } else {
    if (data)
      this.addItems(data);
    else {
      this.fromExternal = true;
      this.navigationManager.navigator.gotoPage(1, true);
    }
  }
};

APP.Viewer.constructor = APP.Viewer;

APP.Viewer.prototype.setupMasonry = function() {
  var scope = this;
  scope.container.masonry({
    itemSelector: '.grid-item',
    columnWidth: '.grid-sizer',
    percentPosition: true
  });

  $('.discover-content').on('resetLayout', function() {
    console.log('expand');
    scope.container.masonry();
  })
};

APP.Viewer.prototype.listeners = function() {
  this.pageStart = this.pageLoadStartHandler.bind(this);
  this.navigationManager.navigator.addEventListener(Events.LOAD_START, this.pageStart);

  this.pageEnd = this.pageLoadEndHandler.bind(this);
  this.navigationManager.navigator.addEventListener(Events.LOAD_END, this.pageEnd);
};

APP.Viewer.prototype.pageLoadStartHandler = function() {
  this.container.parent().find('.bare-message').hide();
  this.container.parent().find('.loading').show();
};

APP.Viewer.prototype.pageLoadEndHandler = function(event) {
  if (this.fromExternal) {
    this.initialize = true;
  } else {
    this.initialize = false;
  }
  this.addItems(event.data.items);
  if (this.options && this.options.getTotal) {
    this.options.getTotal(event.data.pagination.total);
  }
};

APP.Viewer.prototype.addItems = function(items) {
  this.container.parent().find('.loading').show();
  if (this.navigation === APP.NavigationManager.PAGINATION && !this.initialize) {
    this.clean();
  }
  if (items.length < 1) {
    if (this.container.parent().find('.bare-message').hasClass('hide')) {
      this.container.parent().find('.bare-message').removeClass('hide');
    }
    var display = this.container.parent().find('.bare-message').show().css('display');
    this.container.parent().find('.bare-message').show().css('display', display);
    this.container.parent().height('auto');
    this.container.parent().find('.loading').hide();
  }
  var scopetemp = this;
  var i = 0,
    item, counter = 0,
    lel = [];
  for (i; i < items.length; i++) {
    if (this.id === 'action') {
      if (items[i].verb === 'create-work' || items[i].verb === 'like-work') {
        item = new APP.FeedWorkCreated(items[i], this.options);
      }
      if (items[i].verb === 'follow-user') {
        item = new APP.FeedUserFollow(items[i], this.options);
      }
    } else if (this.id === 'notificationItem') {
      if (items[i].verb === 'review-work') {
        item = new APP.NotificationReview(items[i], this.options);
      }
      if (items[i].verb === 'follow-user') {
        item = new APP.NotificationFollow(items[i], this.options);
      }
      if (items[i].verb === 'like-work') {
        item = new APP.NotificationLike(items[i], this.options);
      }
      if (items[i].verb === 'request-work') {
        item = new APP.NotificationRequest(items[i], this.options);
      }
      if (items[i].verb === 'denied-product') {
        item = new APP.NotificationDeniedProduct(items[i], this.options);
      }
      if (items[i].verb === 'accepted-product') {
        item = new APP.NotificationAcceptedProduct(items[i], this.options);
      }

    } else {
      item = new APP[Utils.capitalize(this.id)](items[i], this.options);
    }
    if (item.view.children().hasClass("work-card")) {
      var $items = item.view;
      $items.attr('id', item.data.id);
      $items.hide();
      this.container.append($items);
      lel.push(item.data.id);
      var scope = this.container;
      $items.imagesLoaded().progress(function(imgLoad, image) {
        ++counter;
        $(image.img).parents('.grid-item');
        if (counter === items.length) {
          var timeout = setTimeout(function() {
            clearTimeout(timeout);
            for (i = 0; i < lel.length; i++) {
              var it = $('#' + lel[i]);
              it.show();
              scope.masonry('appended', it);
              scope.masonry();
              if (scopetemp.navigationManager)
                scopetemp.navigationManager.navigator.restart();
              scope.parent().find('.loading').hide();
            }
          }, 1000);
        }
      });
    } else {
      if (this.id === 'carrouselItem' || this.id === 'action' || this.id === 'notificationItem' || this.id === 'post' || this.id === 'postMinimal' || this.id === 'tableUser' || this.id === 'tableWork' || this.id === 'tableProductApplying') {
        this.container.append(item.view);
      } else {
        this.container.append(item.view).masonry('appended', item.view);
        this.container.masonry();
      }
      if (scopetemp.navigationManager) {
        scopetemp.navigationManager.navigator.restart();
      }
      this.container.parent().find('.loading').hide();
    }
  }
};

APP.Viewer.prototype.reset = function() {
  this.clean();
  this.navigationManager.navigator.reset();
};

APP.Viewer.prototype.clean = function() {
  if (this.id === 'carrouselItem' || this.id === 'action' || this.id === 'notificationItem' || this.id === 'post' || this.id === 'postMinimal' || this.id === 'tableUser' || this.id === 'tableWork' || this.id === 'tableProductApplying') {
    this.container.empty();
  } else {
    this.container.masonry('remove', this.container.find('.grid-item')).masonry();
  }
  this.initialize = false;
};

APP.Viewer.prototype.suspend = function() {
  this.navigationManager.navigator.suspend();
  this.navigationManager.navigator.removeEventListener(Events.LOAD_START, this.pageStart);
  this.navigationManager.navigator.removeEventListener(Events.LOAD_END, this.pageEnd);
};

APP.Viewer.prototype.restart = function() {
  this.navigationManager.navigator.addEventListener(Events.LOAD_START, this.pageStart);
  this.navigationManager.navigator.addEventListener(Events.LOAD_END, this.pageEnd);
  this.navigationManager.navigator.restart();
  this.container.masonry();
};
/**
 *Author : www.juliocanares.com/cv
 *Email : juliocanares@gmail.com
 */
var APP = APP || {};

APP.WorkScreen = function() {
  APP.BaseScreen.call(this, 'work');

  this.currentItem = this.oldItem;
  this.currentSection, this.oldSection;
  this.collections = [];
  this.idCollections = [];

  this.following = false;
};

APP.WorkScreen.constructor = APP.WorkScreen;
APP.WorkScreen.prototype = Object.create(APP.BaseScreen.prototype);

APP.WorkScreen.prototype.setupUI = function() {

  for (var i = 0; i < categories.length; i++) {
    var category = categories[i],
      products = [];
    for (var j = 0; j < category.subCategories.length; j++) {
      var subCategory = category.subCategories[j];
      for (var k = 0; k < subCategory.innerCategories.length; k++) {
        var innerCategory = subCategory.innerCategories[k];
        for (var l = 0; l < innerCategory.Products.length; l++) {
          products.push(innerCategory.Products[l]);
        }
      }
    }
    new APP.Viewer('carrouselItem', $('.' + category.nameSlugify), null, products);
  }

  new APP.Viewer('carrouselItem', $('.more'), null, more,{
    worked: true
  });
  new APP.Viewer('carrouselItem', $('.similar'), null, similar,{
    worked: true
  });

  new APP.Carrousel($('.js-more-carousel'), $('.more'));
  new APP.Carrousel($('.js-similar-carousel'), $('.similar'));

  new APP.PhotoSwipe('work');

  this.reviewsContainer = $('.reviews-items-container');
  for (var i = 0; i < reviews.length; i++)
    this.reviewsContainer.append(new APP.Review(reviews[i]).view);

  this.shareFb = $('.share-fb');
  this.askBtn = $('.ask-availability');
  this.loginReview = $('.login-review');
  this.askRequester = $('.ask-requester');
  this.thanksRequester = $('.thanks-requester');
  this.likeBtn = $('.like-btn');
  this.afterLike = $('.after-like');
  this.saveBtn = $('.save-collections');
  this.saveBtnLoading = $('.save-collections-loading');
  this.followBtn = $('.am-Follow-button');
  this.collectionsContainer = $('.collections');
  this.collectionForm = $('.add-collection-form');
  this.reviewForm = $('.review-form');
  this.reviewContainer = $('.reviews-items-container');

  this.prevBtn = $('.prev-btn');
  this.nextBtn = $('.next-btn');

  new Clipboard('.copy', {
    text: this.copyHandler.bind(this)
  });
}

APP.WorkScreen.prototype.listeners = function() {
  APP.BaseScreen.prototype.listeners.call(this);
  this.shareFb.click(this.shareFBHandler.bind(this));

  $('.menu-item').click(this.menuItemHandler.bind(this));
  $('.menu-item[data-name=' + currentPath + ']').click();

  this.askBtn.click(this.askAvailabilityHandler.bind(this));
  this.loginReview.click(this.loginReviewHandler.bind(this));
  this.saveBtn.click(this.saveClickHandler.bind(this));

  if (DataApp.currentUser) {
    var collectionsUrl = DataApp.currentUser.url + '/collection/all';
    this.requestHandler(collectionsUrl, {
      meta: 'works'
    }, this.collectionsHandlerComplete);
    if (!owner) {
      var followingUrl = DataApp.currentUser.url + '/isFollowing';
      this.requestHandler(followingUrl, {
        idUser: work.User.id
      }, this.isFollowingComplete);
    }
  }

  this.likeBtn.click(this.likeBtnHandler.bind(this));

  this.followBtn.click(this.followHandler.bind(this));
  this.collectionForm.submit(this.collectionFormHandler.bind(this));
  this.reviewForm.submit(this.reviewFormHandler.bind(this));

  $(document).bind('keyup', this.documentKeyupHandler.bind(this));
};

APP.WorkScreen.prototype.documentKeyupHandler = function(event) {
  if (event.keyCode === 39 && this.prevBtn.length > 0)
    window.location.href = this.prevBtn.attr('href');

  if (event.keyCode === 37 && this.nextBtn.length > 0)
    window.location.href = this.nextBtn.attr('href');
};

APP.WorkScreen.prototype.copyHandler = function(trigger) {
  $('#lean_overlay').trigger("click");
  this.showFlash('succes', 'Link Copiado');
  return window.location.href;
};

APP.WorkScreen.prototype.reviewFormHandler = function(event) {
  event.preventDefault();
  var url = DataApp.currentUser.url + '/work/review/create';
  this.requestHandler(url, $(event.target).serialize(), this.reviewComplete);
};

APP.WorkScreen.prototype.reviewComplete = function(response) {
  $('.value-input').val('');
  this.reviewContainer.append(new APP.Review(response.data.review).view);
}


APP.WorkScreen.prototype.followHandler = function() {
  Utils.checkAuthentication();
  var url = DataApp.currentUser.url + (this.isFollowing ? '/unfollow/' : '/follow/');
  this.requestHandler(url, {
    idUser: work.User.id
  }, this.followComplete);
};

APP.WorkScreen.prototype.followComplete = function(response) {
  console.log(response);
  if (this.isFollowing) {
    this.followBtn.removeClass('following').text('+ SEGUIR');
  } else {
    this.followBtn.addClass('following').text('Siguiendo');
  }

  this.isFollowing = !this.isFollowing;
}

APP.WorkScreen.prototype.isFollowingComplete = function(response) {
  this.isFollowing = response.data.following;
  this.isFollowing && this.followBtn.addClass('following').text('Siguiendo');
}

APP.WorkScreen.prototype.saveClickHandler = function() {
  this.saveBtn.hide();
  this.saveBtnLoading.show();

  var url = DataApp.currentUser.url + '/work/add_to_collection';
  var payload = {
    collections: JSON.stringify(this.idCollections),
    idWork: work.id
  };
  this.requestHandler(url, payload, this.saveRequestComplete);
};

APP.WorkScreen.prototype.saveRequestComplete = function() {
  this.saveBtn.show();
  this.saveBtnLoading.hide();
  this.showFlash('succes', 'Su actualizo tus colecciones');

  $('#lean_overlay').trigger('click');
};


APP.WorkScreen.prototype.collectionFormHandler = function(event) {
  event.preventDefault();
  var url = DataApp.currentUser.url + '/collection/create';
  this.requestHandler(url, $(event.target).serialize(), this.collectionFormComplete);
};

APP.WorkScreen.prototype.collectionFormComplete = function(response) {
  var item = new APP.CollectionItem(response.data.collection);
  item.addEventListener(Events.COLLECTION_ITEM_SELECTED, this.collectionItemSelected.bind(this));
  this.collections.push(item);
  this.collectionsContainer.append(item.view);
};


APP.WorkScreen.prototype.likeBtnHandler = function() {
  Utils.checkAuthentication();
  if (!work.liked) {
    var url = DataApp.currentUser.url + '/work/like';
    this.requestHandler(url, {
      idWork: work.id
    }, this.likeComplete);
  }
};

APP.WorkScreen.prototype.likeComplete = function(response) {
  console.log(response);
  work.liked = !work.liked;
  $('.likes').text(response.data.likes);
  this.likeBtn.parent().addClass('active');
  this.afterLike.show();
};

APP.WorkScreen.prototype.collectionsHandlerComplete = function(response) {
  var collections = response.data.collections;
  var i, item;
  for (i = 0; i < collections.length; i++) {
    item = new APP.CollectionItem(collections[i]);
    this.collections.push(item);
    item.addEventListener(Events.COLLECTION_ITEM_SELECTED, this.collectionItemSelected.bind(this));
    this.collectionsContainer.append(item.view);
  }

  var url = DataApp.currentUser.url + '/work/inside_collection';
  this.requestHandler(url, {
    idWork: work.id
  }, this.insideCollectionHandler);
};

APP.WorkScreen.prototype.insideCollectionHandler = function(response) {
  var collections = response.data.collections;
  var i, j;
  for (i = 0; i < this.collections.length; i++)
    this.collections[i].view.removeClass('selected');

  this.idCollections = [];
  for (i = 0; i < collections.length; i++) {
    for (j = 0; j < this.collections.length; j++) {
      if (collections[i].id === this.collections[j].data.id) {
        this.idCollections.push(collections[i].id);
        this.collections[j].view.addClass('selected');
      }
    }
  }
};

APP.WorkScreen.prototype.collectionItemSelected = function(event) {
  var item = event.target;
  var index = this.idCollections.indexOf(item.data.id);
  if (index === -1)
    this.idCollections.push(item.data.id);
  else
    this.idCollections.splice(index, 1);
};

APP.WorkScreen.prototype.askAvailabilityHandler = function(event) {
  Utils.checkAuthentication();
  var url = DataApp.currentUser.url + '/work/availability';
  this.requestHandler(url, {
    idWork: work.id
  }, this.askAvailabilityComplete);
};

APP.WorkScreen.prototype.loginReviewHandler = function() {
  Utils.checkAuthentication();
};

APP.WorkScreen.prototype.askAvailabilityComplete = function(response) {
  this.askRequester.hide();
  this.thanksRequester.show();
};

APP.WorkScreen.prototype.menuItemHandler = function(event) {
  this.currentItem = $(event.currentTarget);
  var path = this.currentItem.data('name');
  this.currentSection = $('.' + path + '-container');
  this.currentSection.show();
  var url = '/user/' + work.User.username + '/work/' + work.nameSlugify +
    '/' + (path === 'index' ? '' : path);

  $('.menu-item').removeClass('selected');
  this.currentItem.addClass('selected');

  this.oldSection && this.oldSection.hide();
  this.oldSection = this.currentSection;
  Utils.changeUrl(DataApp.baseTitle + Utils.capitalize(path), url);
};

APP.WorkScreen.prototype.shareFBHandler = function() {
  Utils.shareFBWork(work);
};
